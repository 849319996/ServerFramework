// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=null.  DO NOT EDIT!
#pragma warning disable
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace org.zhangqi.proto {
  
  public static partial class Common {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    #endregion
    #region Extensions
    internal static readonly object Descriptor;
    static Common() {
      Descriptor = null;
    }
    #endregion
    
  }
  #region Enums
  public enum RemoteServerTypeEnum {
    ServerTypeLogic = 1,
    ServerTypeBattle = 2,
    ServerTypeGateway = 3,
    ServerTypeGm = 4,
  }
  
  public enum GmCmdTypeEnum {
    GmCmdReloadTableConfig = 1,
    GmCmdCloseServer = 2,
  }
  
  public enum ChannelEnum {
    ChannelNone = 0,
  }
  
  public enum LangEnum {
    LangCn = 0,
  }
  
  public enum UserOnlineStateEnum {
    Offline = 0,
    Online = 1,
  }
  
  public enum UserActionStateEnum {
    ActionNone = 0,
    Matching = 1,
    Playing = 2,
  }
  
  public enum UserForbidReasonEnum {
    UserForbidReasonGmOperate = 1,
    UserForbidReasonCheat = 2,
  }
  
  public enum BattleTypeEnum {
    BattleTypeTwoPlayer = 1,
  }
  
  public enum ForceOfflineReasonEnum {
    ForceOfflineServerNotAvailable = 1,
    ForceOfflineSameUserLogin = 2,
  }
  
  #endregion
  
  #region Messages
  public sealed partial class OnlineUserInfo : pb::GeneratedMessageLite<OnlineUserInfo, OnlineUserInfo.Builder> {
    private OnlineUserInfo() { }
    private static readonly OnlineUserInfo defaultInstance = new OnlineUserInfo().MakeReadOnly();
    private static readonly string[] _onlineUserInfoFieldNames = new string[] { "channel", "connectBattleServerId", "connectGatewayId", "connectLogicServerId", "loginedTimestamp", "nickname", "sessionId", "userId", "userState", "username" };
    private static readonly uint[] _onlineUserInfoFieldTags = new uint[] { 16, 72, 56, 64, 80, 34, 48, 8, 42, 26 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static OnlineUserInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override OnlineUserInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OnlineUserInfo ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private int userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public int UserId {
      get { return userId_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ChannelFieldNumber = 2;
    private bool hasChannel;
    private global::org.zhangqi.proto.ChannelEnum channel_ = global::org.zhangqi.proto.ChannelEnum.ChannelNone;
    public bool HasChannel {
      get { return hasChannel; }
    }
    public global::org.zhangqi.proto.ChannelEnum Channel {
      get { return channel_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UsernameFieldNumber = 3;
    private bool hasUsername;
    private string username_ = "";
    public bool HasUsername {
      get { return hasUsername; }
    }
    public string Username {
      get { return username_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int NicknameFieldNumber = 4;
    private bool hasNickname;
    private string nickname_ = "";
    public bool HasNickname {
      get { return hasNickname; }
    }
    public string Nickname {
      get { return nickname_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserStateFieldNumber = 5;
    private bool hasUserState;
    private global::org.zhangqi.proto.UserState userState_;
    public bool HasUserState {
      get { return hasUserState; }
    }
    public global::org.zhangqi.proto.UserState UserState {
      get { return userState_ ?? global::org.zhangqi.proto.UserState.DefaultInstance; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int SessionIdFieldNumber = 6;
    private bool hasSessionId;
    private int sessionId_;
    public bool HasSessionId {
      get { return hasSessionId; }
    }
    public int SessionId {
      get { return sessionId_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ConnectGatewayIdFieldNumber = 7;
    private bool hasConnectGatewayId;
    private int connectGatewayId_;
    public bool HasConnectGatewayId {
      get { return hasConnectGatewayId; }
    }
    public int ConnectGatewayId {
      get { return connectGatewayId_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ConnectLogicServerIdFieldNumber = 8;
    private bool hasConnectLogicServerId;
    private int connectLogicServerId_;
    public bool HasConnectLogicServerId {
      get { return hasConnectLogicServerId; }
    }
    public int ConnectLogicServerId {
      get { return connectLogicServerId_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ConnectBattleServerIdFieldNumber = 9;
    private bool hasConnectBattleServerId;
    private int connectBattleServerId_;
    public bool HasConnectBattleServerId {
      get { return hasConnectBattleServerId; }
    }
    public int ConnectBattleServerId {
      get { return connectBattleServerId_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int LoginedTimestampFieldNumber = 10;
    private bool hasLoginedTimestamp;
    private long loginedTimestamp_;
    public bool HasLoginedTimestamp {
      get { return hasLoginedTimestamp; }
    }
    public long LoginedTimestamp {
      get { return loginedTimestamp_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _onlineUserInfoFieldNames;
      if (hasUserId) {
        output.WriteInt32(1, field_names[7], UserId);
      }
      if (hasChannel) {
        output.WriteEnum(2, field_names[0], (int) Channel, Channel);
      }
      if (hasUsername) {
        output.WriteString(3, field_names[9], Username);
      }
      if (hasNickname) {
        output.WriteString(4, field_names[5], Nickname);
      }
      if (hasUserState) {
        output.WriteMessage(5, field_names[8], UserState);
      }
      if (hasSessionId) {
        output.WriteInt32(6, field_names[6], SessionId);
      }
      if (hasConnectGatewayId) {
        output.WriteInt32(7, field_names[2], ConnectGatewayId);
      }
      if (hasConnectLogicServerId) {
        output.WriteInt32(8, field_names[3], ConnectLogicServerId);
      }
      if (hasConnectBattleServerId) {
        output.WriteInt32(9, field_names[1], ConnectBattleServerId);
      }
      if (hasLoginedTimestamp) {
        output.WriteInt64(10, field_names[4], LoginedTimestamp);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, UserId);
        }
        if (hasChannel) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Channel);
        }
        if (hasUsername) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Username);
        }
        if (hasNickname) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Nickname);
        }
        if (hasUserState) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, UserState);
        }
        if (hasSessionId) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, SessionId);
        }
        if (hasConnectGatewayId) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, ConnectGatewayId);
        }
        if (hasConnectLogicServerId) {
          size += pb::CodedOutputStream.ComputeInt32Size(8, ConnectLogicServerId);
        }
        if (hasConnectBattleServerId) {
          size += pb::CodedOutputStream.ComputeInt32Size(9, ConnectBattleServerId);
        }
        if (hasLoginedTimestamp) {
          size += pb::CodedOutputStream.ComputeInt64Size(10, LoginedTimestamp);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasUserId) hash ^= userId_.GetHashCode();
      if (hasChannel) hash ^= channel_.GetHashCode();
      if (hasUsername) hash ^= username_.GetHashCode();
      if (hasNickname) hash ^= nickname_.GetHashCode();
      if (hasUserState) hash ^= userState_.GetHashCode();
      if (hasSessionId) hash ^= sessionId_.GetHashCode();
      if (hasConnectGatewayId) hash ^= connectGatewayId_.GetHashCode();
      if (hasConnectLogicServerId) hash ^= connectLogicServerId_.GetHashCode();
      if (hasConnectBattleServerId) hash ^= connectBattleServerId_.GetHashCode();
      if (hasLoginedTimestamp) hash ^= loginedTimestamp_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      OnlineUserInfo other = obj as OnlineUserInfo;
      if (other == null) return false;
      if (hasUserId != other.hasUserId || (hasUserId && !userId_.Equals(other.userId_))) return false;
      if (hasChannel != other.hasChannel || (hasChannel && !channel_.Equals(other.channel_))) return false;
      if (hasUsername != other.hasUsername || (hasUsername && !username_.Equals(other.username_))) return false;
      if (hasNickname != other.hasNickname || (hasNickname && !nickname_.Equals(other.nickname_))) return false;
      if (hasUserState != other.hasUserState || (hasUserState && !userState_.Equals(other.userState_))) return false;
      if (hasSessionId != other.hasSessionId || (hasSessionId && !sessionId_.Equals(other.sessionId_))) return false;
      if (hasConnectGatewayId != other.hasConnectGatewayId || (hasConnectGatewayId && !connectGatewayId_.Equals(other.connectGatewayId_))) return false;
      if (hasConnectLogicServerId != other.hasConnectLogicServerId || (hasConnectLogicServerId && !connectLogicServerId_.Equals(other.connectLogicServerId_))) return false;
      if (hasConnectBattleServerId != other.hasConnectBattleServerId || (hasConnectBattleServerId && !connectBattleServerId_.Equals(other.connectBattleServerId_))) return false;
      if (hasLoginedTimestamp != other.hasLoginedTimestamp || (hasLoginedTimestamp && !loginedTimestamp_.Equals(other.loginedTimestamp_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static OnlineUserInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static OnlineUserInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static OnlineUserInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static OnlineUserInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static OnlineUserInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static OnlineUserInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static OnlineUserInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static OnlineUserInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static OnlineUserInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static OnlineUserInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OnlineUserInfo MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(OnlineUserInfo prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<OnlineUserInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OnlineUserInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OnlineUserInfo result;
      
      private OnlineUserInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          OnlineUserInfo original = result;
          result = new OnlineUserInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OnlineUserInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override OnlineUserInfo DefaultInstanceForType {
        get { return global::org.zhangqi.proto.OnlineUserInfo.DefaultInstance; }
      }
      
      public override OnlineUserInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is OnlineUserInfo) {
          return MergeFrom((OnlineUserInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OnlineUserInfo other) {
        if (other == global::org.zhangqi.proto.OnlineUserInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasChannel) {
          Channel = other.Channel;
        }
        if (other.HasUsername) {
          Username = other.Username;
        }
        if (other.HasNickname) {
          Nickname = other.Nickname;
        }
        if (other.HasUserState) {
          MergeUserState(other.UserState);
        }
        if (other.HasSessionId) {
          SessionId = other.SessionId;
        }
        if (other.HasConnectGatewayId) {
          ConnectGatewayId = other.ConnectGatewayId;
        }
        if (other.HasConnectLogicServerId) {
          ConnectLogicServerId = other.ConnectLogicServerId;
        }
        if (other.HasConnectBattleServerId) {
          ConnectBattleServerId = other.ConnectBattleServerId;
        }
        if (other.HasLoginedTimestamp) {
          LoginedTimestamp = other.LoginedTimestamp;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_onlineUserInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _onlineUserInfoFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserId = input.ReadInt32(ref result.userId_);
              break;
            }
            case 16: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.channel_ = (global::org.zhangqi.proto.ChannelEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.ChannelEnum), str);
                  } else {
                    result.channel_ = (global::org.zhangqi.proto.ChannelEnum)number;
                  }
                  result.hasChannel = true;
                }
                catch {
                }
              }
              break;
            }
            case 26: {
              result.hasUsername = input.ReadString(ref result.username_);
              break;
            }
            case 34: {
              result.hasNickname = input.ReadString(ref result.nickname_);
              break;
            }
            case 42: {
              global::org.zhangqi.proto.UserState.Builder subBuilder = global::org.zhangqi.proto.UserState.CreateBuilder();
              if (result.hasUserState) {
                subBuilder.MergeFrom(UserState);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserState = subBuilder.BuildPartial();
              break;
            }
            case 48: {
              result.hasSessionId = input.ReadInt32(ref result.sessionId_);
              break;
            }
            case 56: {
              result.hasConnectGatewayId = input.ReadInt32(ref result.connectGatewayId_);
              break;
            }
            case 64: {
              result.hasConnectLogicServerId = input.ReadInt32(ref result.connectLogicServerId_);
              break;
            }
            case 72: {
              result.hasConnectBattleServerId = input.ReadInt32(ref result.connectBattleServerId_);
              break;
            }
            case 80: {
              result.hasLoginedTimestamp = input.ReadInt64(ref result.loginedTimestamp_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public int UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(int value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0;
        return this;
      }
      
      public bool HasChannel {
       get { return result.hasChannel; }
      }
      public global::org.zhangqi.proto.ChannelEnum Channel {
        get { return result.Channel; }
        set { SetChannel(value); }
      }
      public Builder SetChannel(global::org.zhangqi.proto.ChannelEnum value) {
        PrepareBuilder();
        result.hasChannel = true;
        result.channel_ = value;
        return this;
      }
      public Builder ClearChannel() {
        PrepareBuilder();
        result.hasChannel = false;
        result.channel_ = global::org.zhangqi.proto.ChannelEnum.ChannelNone;
        return this;
      }
      
      public bool HasUsername {
        get { return result.hasUsername; }
      }
      public string Username {
        get { return result.Username; }
        set { SetUsername(value); }
      }
      public Builder SetUsername(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder ClearUsername() {
        PrepareBuilder();
        result.hasUsername = false;
        result.username_ = "";
        return this;
      }
      
      public bool HasNickname {
        get { return result.hasNickname; }
      }
      public string Nickname {
        get { return result.Nickname; }
        set { SetNickname(value); }
      }
      public Builder SetNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickname = true;
        result.nickname_ = value;
        return this;
      }
      public Builder ClearNickname() {
        PrepareBuilder();
        result.hasNickname = false;
        result.nickname_ = "";
        return this;
      }
      
      public bool HasUserState {
       get { return result.hasUserState; }
      }
      public global::org.zhangqi.proto.UserState UserState {
        get { return result.UserState; }
        set { SetUserState(value); }
      }
      public Builder SetUserState(global::org.zhangqi.proto.UserState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserState = true;
        result.userState_ = value;
        return this;
      }
      public Builder SetUserState(global::org.zhangqi.proto.UserState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserState = true;
        result.userState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserState(global::org.zhangqi.proto.UserState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserState &&
            result.userState_ != global::org.zhangqi.proto.UserState.DefaultInstance) {
            result.userState_ = global::org.zhangqi.proto.UserState.CreateBuilder(result.userState_).MergeFrom(value).BuildPartial();
        } else {
          result.userState_ = value;
        }
        result.hasUserState = true;
        return this;
      }
      public Builder ClearUserState() {
        PrepareBuilder();
        result.hasUserState = false;
        result.userState_ = null;
        return this;
      }
      
      public bool HasSessionId {
        get { return result.hasSessionId; }
      }
      public int SessionId {
        get { return result.SessionId; }
        set { SetSessionId(value); }
      }
      public Builder SetSessionId(int value) {
        PrepareBuilder();
        result.hasSessionId = true;
        result.sessionId_ = value;
        return this;
      }
      public Builder ClearSessionId() {
        PrepareBuilder();
        result.hasSessionId = false;
        result.sessionId_ = 0;
        return this;
      }
      
      public bool HasConnectGatewayId {
        get { return result.hasConnectGatewayId; }
      }
      public int ConnectGatewayId {
        get { return result.ConnectGatewayId; }
        set { SetConnectGatewayId(value); }
      }
      public Builder SetConnectGatewayId(int value) {
        PrepareBuilder();
        result.hasConnectGatewayId = true;
        result.connectGatewayId_ = value;
        return this;
      }
      public Builder ClearConnectGatewayId() {
        PrepareBuilder();
        result.hasConnectGatewayId = false;
        result.connectGatewayId_ = 0;
        return this;
      }
      
      public bool HasConnectLogicServerId {
        get { return result.hasConnectLogicServerId; }
      }
      public int ConnectLogicServerId {
        get { return result.ConnectLogicServerId; }
        set { SetConnectLogicServerId(value); }
      }
      public Builder SetConnectLogicServerId(int value) {
        PrepareBuilder();
        result.hasConnectLogicServerId = true;
        result.connectLogicServerId_ = value;
        return this;
      }
      public Builder ClearConnectLogicServerId() {
        PrepareBuilder();
        result.hasConnectLogicServerId = false;
        result.connectLogicServerId_ = 0;
        return this;
      }
      
      public bool HasConnectBattleServerId {
        get { return result.hasConnectBattleServerId; }
      }
      public int ConnectBattleServerId {
        get { return result.ConnectBattleServerId; }
        set { SetConnectBattleServerId(value); }
      }
      public Builder SetConnectBattleServerId(int value) {
        PrepareBuilder();
        result.hasConnectBattleServerId = true;
        result.connectBattleServerId_ = value;
        return this;
      }
      public Builder ClearConnectBattleServerId() {
        PrepareBuilder();
        result.hasConnectBattleServerId = false;
        result.connectBattleServerId_ = 0;
        return this;
      }
      
      public bool HasLoginedTimestamp {
        get { return result.hasLoginedTimestamp; }
      }
      public long LoginedTimestamp {
        get { return result.LoginedTimestamp; }
        set { SetLoginedTimestamp(value); }
      }
      public Builder SetLoginedTimestamp(long value) {
        PrepareBuilder();
        result.hasLoginedTimestamp = true;
        result.loginedTimestamp_ = value;
        return this;
      }
      public Builder ClearLoginedTimestamp() {
        PrepareBuilder();
        result.hasLoginedTimestamp = false;
        result.loginedTimestamp_ = 0L;
        return this;
      }
    }
    static OnlineUserInfo() {
      object.ReferenceEquals(global::org.zhangqi.proto.Common.Descriptor, null);
    }
  }
  
  public sealed partial class UserState : pb::GeneratedMessageLite<UserState, UserState.Builder> {
    private UserState() { }
    private static readonly UserState defaultInstance = new UserState().MakeReadOnly();
    private static readonly string[] _userStateFieldNames = new string[] { "actionState", "battleId", "battleType", "onlineState" };
    private static readonly uint[] _userStateFieldTags = new uint[] { 16, 34, 24, 8 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserState DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override UserState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserState ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int OnlineStateFieldNumber = 1;
    private bool hasOnlineState;
    private global::org.zhangqi.proto.UserOnlineStateEnum onlineState_ = global::org.zhangqi.proto.UserOnlineStateEnum.Offline;
    public bool HasOnlineState {
      get { return hasOnlineState; }
    }
    public global::org.zhangqi.proto.UserOnlineStateEnum OnlineState {
      get { return onlineState_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ActionStateFieldNumber = 2;
    private bool hasActionState;
    private global::org.zhangqi.proto.UserActionStateEnum actionState_ = global::org.zhangqi.proto.UserActionStateEnum.ActionNone;
    public bool HasActionState {
      get { return hasActionState; }
    }
    public global::org.zhangqi.proto.UserActionStateEnum ActionState {
      get { return actionState_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int BattleTypeFieldNumber = 3;
    private bool hasBattleType;
    private global::org.zhangqi.proto.BattleTypeEnum battleType_ = global::org.zhangqi.proto.BattleTypeEnum.BattleTypeTwoPlayer;
    public bool HasBattleType {
      get { return hasBattleType; }
    }
    public global::org.zhangqi.proto.BattleTypeEnum BattleType {
      get { return battleType_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int BattleIdFieldNumber = 4;
    private bool hasBattleId;
    private string battleId_ = "";
    public bool HasBattleId {
      get { return hasBattleId; }
    }
    public string BattleId {
      get { return battleId_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _userStateFieldNames;
      if (hasOnlineState) {
        output.WriteEnum(1, field_names[3], (int) OnlineState, OnlineState);
      }
      if (hasActionState) {
        output.WriteEnum(2, field_names[0], (int) ActionState, ActionState);
      }
      if (hasBattleType) {
        output.WriteEnum(3, field_names[2], (int) BattleType, BattleType);
      }
      if (hasBattleId) {
        output.WriteString(4, field_names[1], BattleId);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOnlineState) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) OnlineState);
        }
        if (hasActionState) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) ActionState);
        }
        if (hasBattleType) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) BattleType);
        }
        if (hasBattleId) {
          size += pb::CodedOutputStream.ComputeStringSize(4, BattleId);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasOnlineState) hash ^= onlineState_.GetHashCode();
      if (hasActionState) hash ^= actionState_.GetHashCode();
      if (hasBattleType) hash ^= battleType_.GetHashCode();
      if (hasBattleId) hash ^= battleId_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      UserState other = obj as UserState;
      if (other == null) return false;
      if (hasOnlineState != other.hasOnlineState || (hasOnlineState && !onlineState_.Equals(other.onlineState_))) return false;
      if (hasActionState != other.hasActionState || (hasActionState && !actionState_.Equals(other.actionState_))) return false;
      if (hasBattleType != other.hasBattleType || (hasBattleType && !battleType_.Equals(other.battleType_))) return false;
      if (hasBattleId != other.hasBattleId || (hasBattleId && !battleId_.Equals(other.battleId_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserState MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(UserState prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<UserState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserState result;
      
      private UserState PrepareBuilder() {
        if (resultIsReadOnly) {
          UserState original = result;
          result = new UserState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override UserState DefaultInstanceForType {
        get { return global::org.zhangqi.proto.UserState.DefaultInstance; }
      }
      
      public override UserState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is UserState) {
          return MergeFrom((UserState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserState other) {
        if (other == global::org.zhangqi.proto.UserState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOnlineState) {
          OnlineState = other.OnlineState;
        }
        if (other.HasActionState) {
          ActionState = other.ActionState;
        }
        if (other.HasBattleType) {
          BattleType = other.BattleType;
        }
        if (other.HasBattleId) {
          BattleId = other.BattleId;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userStateFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.onlineState_ = (global::org.zhangqi.proto.UserOnlineStateEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.UserOnlineStateEnum), str);
                  } else {
                    result.onlineState_ = (global::org.zhangqi.proto.UserOnlineStateEnum)number;
                  }
                  result.hasOnlineState = true;
                }
                catch {
                }
              }
              break;
            }
            case 16: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.actionState_ = (global::org.zhangqi.proto.UserActionStateEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.UserActionStateEnum), str);
                  } else {
                    result.actionState_ = (global::org.zhangqi.proto.UserActionStateEnum)number;
                  }
                  result.hasActionState = true;
                }
                catch {
                }
              }
              break;
            }
            case 24: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.battleType_ = (global::org.zhangqi.proto.BattleTypeEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.BattleTypeEnum), str);
                  } else {
                    result.battleType_ = (global::org.zhangqi.proto.BattleTypeEnum)number;
                  }
                  result.hasBattleType = true;
                }
                catch {
                }
              }
              break;
            }
            case 34: {
              result.hasBattleId = input.ReadString(ref result.battleId_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasOnlineState {
       get { return result.hasOnlineState; }
      }
      public global::org.zhangqi.proto.UserOnlineStateEnum OnlineState {
        get { return result.OnlineState; }
        set { SetOnlineState(value); }
      }
      public Builder SetOnlineState(global::org.zhangqi.proto.UserOnlineStateEnum value) {
        PrepareBuilder();
        result.hasOnlineState = true;
        result.onlineState_ = value;
        return this;
      }
      public Builder ClearOnlineState() {
        PrepareBuilder();
        result.hasOnlineState = false;
        result.onlineState_ = global::org.zhangqi.proto.UserOnlineStateEnum.Offline;
        return this;
      }
      
      public bool HasActionState {
       get { return result.hasActionState; }
      }
      public global::org.zhangqi.proto.UserActionStateEnum ActionState {
        get { return result.ActionState; }
        set { SetActionState(value); }
      }
      public Builder SetActionState(global::org.zhangqi.proto.UserActionStateEnum value) {
        PrepareBuilder();
        result.hasActionState = true;
        result.actionState_ = value;
        return this;
      }
      public Builder ClearActionState() {
        PrepareBuilder();
        result.hasActionState = false;
        result.actionState_ = global::org.zhangqi.proto.UserActionStateEnum.ActionNone;
        return this;
      }
      
      public bool HasBattleType {
       get { return result.hasBattleType; }
      }
      public global::org.zhangqi.proto.BattleTypeEnum BattleType {
        get { return result.BattleType; }
        set { SetBattleType(value); }
      }
      public Builder SetBattleType(global::org.zhangqi.proto.BattleTypeEnum value) {
        PrepareBuilder();
        result.hasBattleType = true;
        result.battleType_ = value;
        return this;
      }
      public Builder ClearBattleType() {
        PrepareBuilder();
        result.hasBattleType = false;
        result.battleType_ = global::org.zhangqi.proto.BattleTypeEnum.BattleTypeTwoPlayer;
        return this;
      }
      
      public bool HasBattleId {
        get { return result.hasBattleId; }
      }
      public string BattleId {
        get { return result.BattleId; }
        set { SetBattleId(value); }
      }
      public Builder SetBattleId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBattleId = true;
        result.battleId_ = value;
        return this;
      }
      public Builder ClearBattleId() {
        PrepareBuilder();
        result.hasBattleId = false;
        result.battleId_ = "";
        return this;
      }
    }
    static UserState() {
      object.ReferenceEquals(global::org.zhangqi.proto.Common.Descriptor, null);
    }
  }
  
  public sealed partial class UserInfo : pb::GeneratedMessageLite<UserInfo, UserInfo.Builder> {
    private UserInfo() { }
    private static readonly UserInfo defaultInstance = new UserInfo().MakeReadOnly();
    private static readonly string[] _userInfoFieldNames = new string[] { "channel", "lang", "nickname", "userId", "userState", "username" };
    private static readonly uint[] _userInfoFieldTags = new uint[] { 32, 40, 26, 8, 50, 18 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override UserInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserInfo ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private int userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public int UserId {
      get { return userId_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UsernameFieldNumber = 2;
    private bool hasUsername;
    private string username_ = "";
    public bool HasUsername {
      get { return hasUsername; }
    }
    public string Username {
      get { return username_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int NicknameFieldNumber = 3;
    private bool hasNickname;
    private string nickname_ = "";
    public bool HasNickname {
      get { return hasNickname; }
    }
    public string Nickname {
      get { return nickname_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ChannelFieldNumber = 4;
    private bool hasChannel;
    private global::org.zhangqi.proto.ChannelEnum channel_ = global::org.zhangqi.proto.ChannelEnum.ChannelNone;
    public bool HasChannel {
      get { return hasChannel; }
    }
    public global::org.zhangqi.proto.ChannelEnum Channel {
      get { return channel_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int LangFieldNumber = 5;
    private bool hasLang;
    private global::org.zhangqi.proto.LangEnum lang_ = global::org.zhangqi.proto.LangEnum.LangCn;
    public bool HasLang {
      get { return hasLang; }
    }
    public global::org.zhangqi.proto.LangEnum Lang {
      get { return lang_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserStateFieldNumber = 6;
    private bool hasUserState;
    private global::org.zhangqi.proto.UserState userState_;
    public bool HasUserState {
      get { return hasUserState; }
    }
    public global::org.zhangqi.proto.UserState UserState {
      get { return userState_ ?? global::org.zhangqi.proto.UserState.DefaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _userInfoFieldNames;
      if (hasUserId) {
        output.WriteInt32(1, field_names[3], UserId);
      }
      if (hasUsername) {
        output.WriteString(2, field_names[5], Username);
      }
      if (hasNickname) {
        output.WriteString(3, field_names[2], Nickname);
      }
      if (hasChannel) {
        output.WriteEnum(4, field_names[0], (int) Channel, Channel);
      }
      if (hasLang) {
        output.WriteEnum(5, field_names[1], (int) Lang, Lang);
      }
      if (hasUserState) {
        output.WriteMessage(6, field_names[4], UserState);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, UserId);
        }
        if (hasUsername) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Username);
        }
        if (hasNickname) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Nickname);
        }
        if (hasChannel) {
          size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Channel);
        }
        if (hasLang) {
          size += pb::CodedOutputStream.ComputeEnumSize(5, (int) Lang);
        }
        if (hasUserState) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, UserState);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasUserId) hash ^= userId_.GetHashCode();
      if (hasUsername) hash ^= username_.GetHashCode();
      if (hasNickname) hash ^= nickname_.GetHashCode();
      if (hasChannel) hash ^= channel_.GetHashCode();
      if (hasLang) hash ^= lang_.GetHashCode();
      if (hasUserState) hash ^= userState_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      UserInfo other = obj as UserInfo;
      if (other == null) return false;
      if (hasUserId != other.hasUserId || (hasUserId && !userId_.Equals(other.userId_))) return false;
      if (hasUsername != other.hasUsername || (hasUsername && !username_.Equals(other.username_))) return false;
      if (hasNickname != other.hasNickname || (hasNickname && !nickname_.Equals(other.nickname_))) return false;
      if (hasChannel != other.hasChannel || (hasChannel && !channel_.Equals(other.channel_))) return false;
      if (hasLang != other.hasLang || (hasLang && !lang_.Equals(other.lang_))) return false;
      if (hasUserState != other.hasUserState || (hasUserState && !userState_.Equals(other.userState_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserInfo MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(UserInfo prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<UserInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserInfo result;
      
      private UserInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          UserInfo original = result;
          result = new UserInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override UserInfo DefaultInstanceForType {
        get { return global::org.zhangqi.proto.UserInfo.DefaultInstance; }
      }
      
      public override UserInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is UserInfo) {
          return MergeFrom((UserInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserInfo other) {
        if (other == global::org.zhangqi.proto.UserInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasUsername) {
          Username = other.Username;
        }
        if (other.HasNickname) {
          Nickname = other.Nickname;
        }
        if (other.HasChannel) {
          Channel = other.Channel;
        }
        if (other.HasLang) {
          Lang = other.Lang;
        }
        if (other.HasUserState) {
          MergeUserState(other.UserState);
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userInfoFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserId = input.ReadInt32(ref result.userId_);
              break;
            }
            case 18: {
              result.hasUsername = input.ReadString(ref result.username_);
              break;
            }
            case 26: {
              result.hasNickname = input.ReadString(ref result.nickname_);
              break;
            }
            case 32: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.channel_ = (global::org.zhangqi.proto.ChannelEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.ChannelEnum), str);
                  } else {
                    result.channel_ = (global::org.zhangqi.proto.ChannelEnum)number;
                  }
                  result.hasChannel = true;
                }
                catch {
                }
              }
              break;
            }
            case 40: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.lang_ = (global::org.zhangqi.proto.LangEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.LangEnum), str);
                  } else {
                    result.lang_ = (global::org.zhangqi.proto.LangEnum)number;
                  }
                  result.hasLang = true;
                }
                catch {
                }
              }
              break;
            }
            case 50: {
              global::org.zhangqi.proto.UserState.Builder subBuilder = global::org.zhangqi.proto.UserState.CreateBuilder();
              if (result.hasUserState) {
                subBuilder.MergeFrom(UserState);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserState = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public int UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(int value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0;
        return this;
      }
      
      public bool HasUsername {
        get { return result.hasUsername; }
      }
      public string Username {
        get { return result.Username; }
        set { SetUsername(value); }
      }
      public Builder SetUsername(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder ClearUsername() {
        PrepareBuilder();
        result.hasUsername = false;
        result.username_ = "";
        return this;
      }
      
      public bool HasNickname {
        get { return result.hasNickname; }
      }
      public string Nickname {
        get { return result.Nickname; }
        set { SetNickname(value); }
      }
      public Builder SetNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickname = true;
        result.nickname_ = value;
        return this;
      }
      public Builder ClearNickname() {
        PrepareBuilder();
        result.hasNickname = false;
        result.nickname_ = "";
        return this;
      }
      
      public bool HasChannel {
       get { return result.hasChannel; }
      }
      public global::org.zhangqi.proto.ChannelEnum Channel {
        get { return result.Channel; }
        set { SetChannel(value); }
      }
      public Builder SetChannel(global::org.zhangqi.proto.ChannelEnum value) {
        PrepareBuilder();
        result.hasChannel = true;
        result.channel_ = value;
        return this;
      }
      public Builder ClearChannel() {
        PrepareBuilder();
        result.hasChannel = false;
        result.channel_ = global::org.zhangqi.proto.ChannelEnum.ChannelNone;
        return this;
      }
      
      public bool HasLang {
       get { return result.hasLang; }
      }
      public global::org.zhangqi.proto.LangEnum Lang {
        get { return result.Lang; }
        set { SetLang(value); }
      }
      public Builder SetLang(global::org.zhangqi.proto.LangEnum value) {
        PrepareBuilder();
        result.hasLang = true;
        result.lang_ = value;
        return this;
      }
      public Builder ClearLang() {
        PrepareBuilder();
        result.hasLang = false;
        result.lang_ = global::org.zhangqi.proto.LangEnum.LangCn;
        return this;
      }
      
      public bool HasUserState {
       get { return result.hasUserState; }
      }
      public global::org.zhangqi.proto.UserState UserState {
        get { return result.UserState; }
        set { SetUserState(value); }
      }
      public Builder SetUserState(global::org.zhangqi.proto.UserState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserState = true;
        result.userState_ = value;
        return this;
      }
      public Builder SetUserState(global::org.zhangqi.proto.UserState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserState = true;
        result.userState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserState(global::org.zhangqi.proto.UserState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserState &&
            result.userState_ != global::org.zhangqi.proto.UserState.DefaultInstance) {
            result.userState_ = global::org.zhangqi.proto.UserState.CreateBuilder(result.userState_).MergeFrom(value).BuildPartial();
        } else {
          result.userState_ = value;
        }
        result.hasUserState = true;
        return this;
      }
      public Builder ClearUserState() {
        PrepareBuilder();
        result.hasUserState = false;
        result.userState_ = null;
        return this;
      }
    }
    static UserInfo() {
      object.ReferenceEquals(global::org.zhangqi.proto.Common.Descriptor, null);
    }
  }
  
  public sealed partial class UserBriefInfo : pb::GeneratedMessageLite<UserBriefInfo, UserBriefInfo.Builder> {
    private UserBriefInfo() { }
    private static readonly UserBriefInfo defaultInstance = new UserBriefInfo().MakeReadOnly();
    private static readonly string[] _userBriefInfoFieldNames = new string[] { "channel", "lang", "nickname", "userId", "userState" };
    private static readonly uint[] _userBriefInfoFieldTags = new uint[] { 24, 32, 18, 8, 42 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserBriefInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override UserBriefInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserBriefInfo ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private int userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public int UserId {
      get { return userId_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int NicknameFieldNumber = 2;
    private bool hasNickname;
    private string nickname_ = "";
    public bool HasNickname {
      get { return hasNickname; }
    }
    public string Nickname {
      get { return nickname_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ChannelFieldNumber = 3;
    private bool hasChannel;
    private global::org.zhangqi.proto.ChannelEnum channel_ = global::org.zhangqi.proto.ChannelEnum.ChannelNone;
    public bool HasChannel {
      get { return hasChannel; }
    }
    public global::org.zhangqi.proto.ChannelEnum Channel {
      get { return channel_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int LangFieldNumber = 4;
    private bool hasLang;
    private global::org.zhangqi.proto.LangEnum lang_ = global::org.zhangqi.proto.LangEnum.LangCn;
    public bool HasLang {
      get { return hasLang; }
    }
    public global::org.zhangqi.proto.LangEnum Lang {
      get { return lang_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserStateFieldNumber = 5;
    private bool hasUserState;
    private global::org.zhangqi.proto.UserState userState_;
    public bool HasUserState {
      get { return hasUserState; }
    }
    public global::org.zhangqi.proto.UserState UserState {
      get { return userState_ ?? global::org.zhangqi.proto.UserState.DefaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _userBriefInfoFieldNames;
      if (hasUserId) {
        output.WriteInt32(1, field_names[3], UserId);
      }
      if (hasNickname) {
        output.WriteString(2, field_names[2], Nickname);
      }
      if (hasChannel) {
        output.WriteEnum(3, field_names[0], (int) Channel, Channel);
      }
      if (hasLang) {
        output.WriteEnum(4, field_names[1], (int) Lang, Lang);
      }
      if (hasUserState) {
        output.WriteMessage(5, field_names[4], UserState);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, UserId);
        }
        if (hasNickname) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Nickname);
        }
        if (hasChannel) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Channel);
        }
        if (hasLang) {
          size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Lang);
        }
        if (hasUserState) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, UserState);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasUserId) hash ^= userId_.GetHashCode();
      if (hasNickname) hash ^= nickname_.GetHashCode();
      if (hasChannel) hash ^= channel_.GetHashCode();
      if (hasLang) hash ^= lang_.GetHashCode();
      if (hasUserState) hash ^= userState_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      UserBriefInfo other = obj as UserBriefInfo;
      if (other == null) return false;
      if (hasUserId != other.hasUserId || (hasUserId && !userId_.Equals(other.userId_))) return false;
      if (hasNickname != other.hasNickname || (hasNickname && !nickname_.Equals(other.nickname_))) return false;
      if (hasChannel != other.hasChannel || (hasChannel && !channel_.Equals(other.channel_))) return false;
      if (hasLang != other.hasLang || (hasLang && !lang_.Equals(other.lang_))) return false;
      if (hasUserState != other.hasUserState || (hasUserState && !userState_.Equals(other.userState_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserBriefInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserBriefInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserBriefInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserBriefInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserBriefInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserBriefInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserBriefInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserBriefInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserBriefInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserBriefInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserBriefInfo MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(UserBriefInfo prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<UserBriefInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserBriefInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserBriefInfo result;
      
      private UserBriefInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          UserBriefInfo original = result;
          result = new UserBriefInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserBriefInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override UserBriefInfo DefaultInstanceForType {
        get { return global::org.zhangqi.proto.UserBriefInfo.DefaultInstance; }
      }
      
      public override UserBriefInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is UserBriefInfo) {
          return MergeFrom((UserBriefInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserBriefInfo other) {
        if (other == global::org.zhangqi.proto.UserBriefInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasNickname) {
          Nickname = other.Nickname;
        }
        if (other.HasChannel) {
          Channel = other.Channel;
        }
        if (other.HasLang) {
          Lang = other.Lang;
        }
        if (other.HasUserState) {
          MergeUserState(other.UserState);
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userBriefInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userBriefInfoFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserId = input.ReadInt32(ref result.userId_);
              break;
            }
            case 18: {
              result.hasNickname = input.ReadString(ref result.nickname_);
              break;
            }
            case 24: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.channel_ = (global::org.zhangqi.proto.ChannelEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.ChannelEnum), str);
                  } else {
                    result.channel_ = (global::org.zhangqi.proto.ChannelEnum)number;
                  }
                  result.hasChannel = true;
                }
                catch {
                }
              }
              break;
            }
            case 32: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.lang_ = (global::org.zhangqi.proto.LangEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.LangEnum), str);
                  } else {
                    result.lang_ = (global::org.zhangqi.proto.LangEnum)number;
                  }
                  result.hasLang = true;
                }
                catch {
                }
              }
              break;
            }
            case 42: {
              global::org.zhangqi.proto.UserState.Builder subBuilder = global::org.zhangqi.proto.UserState.CreateBuilder();
              if (result.hasUserState) {
                subBuilder.MergeFrom(UserState);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserState = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public int UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(int value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0;
        return this;
      }
      
      public bool HasNickname {
        get { return result.hasNickname; }
      }
      public string Nickname {
        get { return result.Nickname; }
        set { SetNickname(value); }
      }
      public Builder SetNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickname = true;
        result.nickname_ = value;
        return this;
      }
      public Builder ClearNickname() {
        PrepareBuilder();
        result.hasNickname = false;
        result.nickname_ = "";
        return this;
      }
      
      public bool HasChannel {
       get { return result.hasChannel; }
      }
      public global::org.zhangqi.proto.ChannelEnum Channel {
        get { return result.Channel; }
        set { SetChannel(value); }
      }
      public Builder SetChannel(global::org.zhangqi.proto.ChannelEnum value) {
        PrepareBuilder();
        result.hasChannel = true;
        result.channel_ = value;
        return this;
      }
      public Builder ClearChannel() {
        PrepareBuilder();
        result.hasChannel = false;
        result.channel_ = global::org.zhangqi.proto.ChannelEnum.ChannelNone;
        return this;
      }
      
      public bool HasLang {
       get { return result.hasLang; }
      }
      public global::org.zhangqi.proto.LangEnum Lang {
        get { return result.Lang; }
        set { SetLang(value); }
      }
      public Builder SetLang(global::org.zhangqi.proto.LangEnum value) {
        PrepareBuilder();
        result.hasLang = true;
        result.lang_ = value;
        return this;
      }
      public Builder ClearLang() {
        PrepareBuilder();
        result.hasLang = false;
        result.lang_ = global::org.zhangqi.proto.LangEnum.LangCn;
        return this;
      }
      
      public bool HasUserState {
       get { return result.hasUserState; }
      }
      public global::org.zhangqi.proto.UserState UserState {
        get { return result.UserState; }
        set { SetUserState(value); }
      }
      public Builder SetUserState(global::org.zhangqi.proto.UserState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserState = true;
        result.userState_ = value;
        return this;
      }
      public Builder SetUserState(global::org.zhangqi.proto.UserState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserState = true;
        result.userState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserState(global::org.zhangqi.proto.UserState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserState &&
            result.userState_ != global::org.zhangqi.proto.UserState.DefaultInstance) {
            result.userState_ = global::org.zhangqi.proto.UserState.CreateBuilder(result.userState_).MergeFrom(value).BuildPartial();
        } else {
          result.userState_ = value;
        }
        result.hasUserState = true;
        return this;
      }
      public Builder ClearUserState() {
        PrepareBuilder();
        result.hasUserState = false;
        result.userState_ = null;
        return this;
      }
    }
    static UserBriefInfo() {
      object.ReferenceEquals(global::org.zhangqi.proto.Common.Descriptor, null);
    }
  }
  
  public sealed partial class UserData : pb::GeneratedMessageLite<UserData, UserData.Builder> {
    private UserData() { }
    private static readonly UserData defaultInstance = new UserData().MakeReadOnly();
    private static readonly string[] _userDataFieldNames = new string[] { "channel", "forbidInfo", "lang", "lastLoginIp", "lastLoginTimestamp", "nickname", "passwordMD5", "registIp", "registTimestamp", "userId", "username" };
    private static readonly uint[] _userDataFieldTags = new uint[] { 40, 90, 48, 82, 72, 34, 26, 66, 56, 8, 18 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserData DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override UserData DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserData ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private int userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public int UserId {
      get { return userId_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UsernameFieldNumber = 2;
    private bool hasUsername;
    private string username_ = "";
    public bool HasUsername {
      get { return hasUsername; }
    }
    public string Username {
      get { return username_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int PasswordMD5FieldNumber = 3;
    private bool hasPasswordMD5;
    private string passwordMD5_ = "";
    public bool HasPasswordMD5 {
      get { return hasPasswordMD5; }
    }
    public string PasswordMD5 {
      get { return passwordMD5_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int NicknameFieldNumber = 4;
    private bool hasNickname;
    private string nickname_ = "";
    public bool HasNickname {
      get { return hasNickname; }
    }
    public string Nickname {
      get { return nickname_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ChannelFieldNumber = 5;
    private bool hasChannel;
    private global::org.zhangqi.proto.ChannelEnum channel_ = global::org.zhangqi.proto.ChannelEnum.ChannelNone;
    public bool HasChannel {
      get { return hasChannel; }
    }
    public global::org.zhangqi.proto.ChannelEnum Channel {
      get { return channel_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int LangFieldNumber = 6;
    private bool hasLang;
    private global::org.zhangqi.proto.LangEnum lang_ = global::org.zhangqi.proto.LangEnum.LangCn;
    public bool HasLang {
      get { return hasLang; }
    }
    public global::org.zhangqi.proto.LangEnum Lang {
      get { return lang_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int RegistTimestampFieldNumber = 7;
    private bool hasRegistTimestamp;
    private long registTimestamp_;
    public bool HasRegistTimestamp {
      get { return hasRegistTimestamp; }
    }
    public long RegistTimestamp {
      get { return registTimestamp_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int RegistIpFieldNumber = 8;
    private bool hasRegistIp;
    private string registIp_ = "";
    public bool HasRegistIp {
      get { return hasRegistIp; }
    }
    public string RegistIp {
      get { return registIp_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int LastLoginTimestampFieldNumber = 9;
    private bool hasLastLoginTimestamp;
    private long lastLoginTimestamp_;
    public bool HasLastLoginTimestamp {
      get { return hasLastLoginTimestamp; }
    }
    public long LastLoginTimestamp {
      get { return lastLoginTimestamp_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int LastLoginIpFieldNumber = 10;
    private bool hasLastLoginIp;
    private string lastLoginIp_ = "";
    public bool HasLastLoginIp {
      get { return hasLastLoginIp; }
    }
    public string LastLoginIp {
      get { return lastLoginIp_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ForbidInfoFieldNumber = 11;
    private bool hasForbidInfo;
    private global::org.zhangqi.proto.UserForbidInfo forbidInfo_;
    public bool HasForbidInfo {
      get { return hasForbidInfo; }
    }
    public global::org.zhangqi.proto.UserForbidInfo ForbidInfo {
      get { return forbidInfo_ ?? global::org.zhangqi.proto.UserForbidInfo.DefaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _userDataFieldNames;
      if (hasUserId) {
        output.WriteInt32(1, field_names[9], UserId);
      }
      if (hasUsername) {
        output.WriteString(2, field_names[10], Username);
      }
      if (hasPasswordMD5) {
        output.WriteString(3, field_names[6], PasswordMD5);
      }
      if (hasNickname) {
        output.WriteString(4, field_names[5], Nickname);
      }
      if (hasChannel) {
        output.WriteEnum(5, field_names[0], (int) Channel, Channel);
      }
      if (hasLang) {
        output.WriteEnum(6, field_names[2], (int) Lang, Lang);
      }
      if (hasRegistTimestamp) {
        output.WriteInt64(7, field_names[8], RegistTimestamp);
      }
      if (hasRegistIp) {
        output.WriteString(8, field_names[7], RegistIp);
      }
      if (hasLastLoginTimestamp) {
        output.WriteInt64(9, field_names[4], LastLoginTimestamp);
      }
      if (hasLastLoginIp) {
        output.WriteString(10, field_names[3], LastLoginIp);
      }
      if (hasForbidInfo) {
        output.WriteMessage(11, field_names[1], ForbidInfo);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, UserId);
        }
        if (hasUsername) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Username);
        }
        if (hasPasswordMD5) {
          size += pb::CodedOutputStream.ComputeStringSize(3, PasswordMD5);
        }
        if (hasNickname) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Nickname);
        }
        if (hasChannel) {
          size += pb::CodedOutputStream.ComputeEnumSize(5, (int) Channel);
        }
        if (hasLang) {
          size += pb::CodedOutputStream.ComputeEnumSize(6, (int) Lang);
        }
        if (hasRegistTimestamp) {
          size += pb::CodedOutputStream.ComputeInt64Size(7, RegistTimestamp);
        }
        if (hasRegistIp) {
          size += pb::CodedOutputStream.ComputeStringSize(8, RegistIp);
        }
        if (hasLastLoginTimestamp) {
          size += pb::CodedOutputStream.ComputeInt64Size(9, LastLoginTimestamp);
        }
        if (hasLastLoginIp) {
          size += pb::CodedOutputStream.ComputeStringSize(10, LastLoginIp);
        }
        if (hasForbidInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(11, ForbidInfo);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasUserId) hash ^= userId_.GetHashCode();
      if (hasUsername) hash ^= username_.GetHashCode();
      if (hasPasswordMD5) hash ^= passwordMD5_.GetHashCode();
      if (hasNickname) hash ^= nickname_.GetHashCode();
      if (hasChannel) hash ^= channel_.GetHashCode();
      if (hasLang) hash ^= lang_.GetHashCode();
      if (hasRegistTimestamp) hash ^= registTimestamp_.GetHashCode();
      if (hasRegistIp) hash ^= registIp_.GetHashCode();
      if (hasLastLoginTimestamp) hash ^= lastLoginTimestamp_.GetHashCode();
      if (hasLastLoginIp) hash ^= lastLoginIp_.GetHashCode();
      if (hasForbidInfo) hash ^= forbidInfo_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      UserData other = obj as UserData;
      if (other == null) return false;
      if (hasUserId != other.hasUserId || (hasUserId && !userId_.Equals(other.userId_))) return false;
      if (hasUsername != other.hasUsername || (hasUsername && !username_.Equals(other.username_))) return false;
      if (hasPasswordMD5 != other.hasPasswordMD5 || (hasPasswordMD5 && !passwordMD5_.Equals(other.passwordMD5_))) return false;
      if (hasNickname != other.hasNickname || (hasNickname && !nickname_.Equals(other.nickname_))) return false;
      if (hasChannel != other.hasChannel || (hasChannel && !channel_.Equals(other.channel_))) return false;
      if (hasLang != other.hasLang || (hasLang && !lang_.Equals(other.lang_))) return false;
      if (hasRegistTimestamp != other.hasRegistTimestamp || (hasRegistTimestamp && !registTimestamp_.Equals(other.registTimestamp_))) return false;
      if (hasRegistIp != other.hasRegistIp || (hasRegistIp && !registIp_.Equals(other.registIp_))) return false;
      if (hasLastLoginTimestamp != other.hasLastLoginTimestamp || (hasLastLoginTimestamp && !lastLoginTimestamp_.Equals(other.lastLoginTimestamp_))) return false;
      if (hasLastLoginIp != other.hasLastLoginIp || (hasLastLoginIp && !lastLoginIp_.Equals(other.lastLoginIp_))) return false;
      if (hasForbidInfo != other.hasForbidInfo || (hasForbidInfo && !forbidInfo_.Equals(other.forbidInfo_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserData ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserData MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(UserData prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<UserData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserData cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserData result;
      
      private UserData PrepareBuilder() {
        if (resultIsReadOnly) {
          UserData original = result;
          result = new UserData();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserData MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override UserData DefaultInstanceForType {
        get { return global::org.zhangqi.proto.UserData.DefaultInstance; }
      }
      
      public override UserData BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is UserData) {
          return MergeFrom((UserData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserData other) {
        if (other == global::org.zhangqi.proto.UserData.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasUsername) {
          Username = other.Username;
        }
        if (other.HasPasswordMD5) {
          PasswordMD5 = other.PasswordMD5;
        }
        if (other.HasNickname) {
          Nickname = other.Nickname;
        }
        if (other.HasChannel) {
          Channel = other.Channel;
        }
        if (other.HasLang) {
          Lang = other.Lang;
        }
        if (other.HasRegistTimestamp) {
          RegistTimestamp = other.RegistTimestamp;
        }
        if (other.HasRegistIp) {
          RegistIp = other.RegistIp;
        }
        if (other.HasLastLoginTimestamp) {
          LastLoginTimestamp = other.LastLoginTimestamp;
        }
        if (other.HasLastLoginIp) {
          LastLoginIp = other.LastLoginIp;
        }
        if (other.HasForbidInfo) {
          MergeForbidInfo(other.ForbidInfo);
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userDataFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userDataFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserId = input.ReadInt32(ref result.userId_);
              break;
            }
            case 18: {
              result.hasUsername = input.ReadString(ref result.username_);
              break;
            }
            case 26: {
              result.hasPasswordMD5 = input.ReadString(ref result.passwordMD5_);
              break;
            }
            case 34: {
              result.hasNickname = input.ReadString(ref result.nickname_);
              break;
            }
            case 40: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.channel_ = (global::org.zhangqi.proto.ChannelEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.ChannelEnum), str);
                  } else {
                    result.channel_ = (global::org.zhangqi.proto.ChannelEnum)number;
                  }
                  result.hasChannel = true;
                }
                catch {
                }
              }
              break;
            }
            case 48: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.lang_ = (global::org.zhangqi.proto.LangEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.LangEnum), str);
                  } else {
                    result.lang_ = (global::org.zhangqi.proto.LangEnum)number;
                  }
                  result.hasLang = true;
                }
                catch {
                }
              }
              break;
            }
            case 56: {
              result.hasRegistTimestamp = input.ReadInt64(ref result.registTimestamp_);
              break;
            }
            case 66: {
              result.hasRegistIp = input.ReadString(ref result.registIp_);
              break;
            }
            case 72: {
              result.hasLastLoginTimestamp = input.ReadInt64(ref result.lastLoginTimestamp_);
              break;
            }
            case 82: {
              result.hasLastLoginIp = input.ReadString(ref result.lastLoginIp_);
              break;
            }
            case 90: {
              global::org.zhangqi.proto.UserForbidInfo.Builder subBuilder = global::org.zhangqi.proto.UserForbidInfo.CreateBuilder();
              if (result.hasForbidInfo) {
                subBuilder.MergeFrom(ForbidInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ForbidInfo = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public int UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(int value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0;
        return this;
      }
      
      public bool HasUsername {
        get { return result.hasUsername; }
      }
      public string Username {
        get { return result.Username; }
        set { SetUsername(value); }
      }
      public Builder SetUsername(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder ClearUsername() {
        PrepareBuilder();
        result.hasUsername = false;
        result.username_ = "";
        return this;
      }
      
      public bool HasPasswordMD5 {
        get { return result.hasPasswordMD5; }
      }
      public string PasswordMD5 {
        get { return result.PasswordMD5; }
        set { SetPasswordMD5(value); }
      }
      public Builder SetPasswordMD5(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPasswordMD5 = true;
        result.passwordMD5_ = value;
        return this;
      }
      public Builder ClearPasswordMD5() {
        PrepareBuilder();
        result.hasPasswordMD5 = false;
        result.passwordMD5_ = "";
        return this;
      }
      
      public bool HasNickname {
        get { return result.hasNickname; }
      }
      public string Nickname {
        get { return result.Nickname; }
        set { SetNickname(value); }
      }
      public Builder SetNickname(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNickname = true;
        result.nickname_ = value;
        return this;
      }
      public Builder ClearNickname() {
        PrepareBuilder();
        result.hasNickname = false;
        result.nickname_ = "";
        return this;
      }
      
      public bool HasChannel {
       get { return result.hasChannel; }
      }
      public global::org.zhangqi.proto.ChannelEnum Channel {
        get { return result.Channel; }
        set { SetChannel(value); }
      }
      public Builder SetChannel(global::org.zhangqi.proto.ChannelEnum value) {
        PrepareBuilder();
        result.hasChannel = true;
        result.channel_ = value;
        return this;
      }
      public Builder ClearChannel() {
        PrepareBuilder();
        result.hasChannel = false;
        result.channel_ = global::org.zhangqi.proto.ChannelEnum.ChannelNone;
        return this;
      }
      
      public bool HasLang {
       get { return result.hasLang; }
      }
      public global::org.zhangqi.proto.LangEnum Lang {
        get { return result.Lang; }
        set { SetLang(value); }
      }
      public Builder SetLang(global::org.zhangqi.proto.LangEnum value) {
        PrepareBuilder();
        result.hasLang = true;
        result.lang_ = value;
        return this;
      }
      public Builder ClearLang() {
        PrepareBuilder();
        result.hasLang = false;
        result.lang_ = global::org.zhangqi.proto.LangEnum.LangCn;
        return this;
      }
      
      public bool HasRegistTimestamp {
        get { return result.hasRegistTimestamp; }
      }
      public long RegistTimestamp {
        get { return result.RegistTimestamp; }
        set { SetRegistTimestamp(value); }
      }
      public Builder SetRegistTimestamp(long value) {
        PrepareBuilder();
        result.hasRegistTimestamp = true;
        result.registTimestamp_ = value;
        return this;
      }
      public Builder ClearRegistTimestamp() {
        PrepareBuilder();
        result.hasRegistTimestamp = false;
        result.registTimestamp_ = 0L;
        return this;
      }
      
      public bool HasRegistIp {
        get { return result.hasRegistIp; }
      }
      public string RegistIp {
        get { return result.RegistIp; }
        set { SetRegistIp(value); }
      }
      public Builder SetRegistIp(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRegistIp = true;
        result.registIp_ = value;
        return this;
      }
      public Builder ClearRegistIp() {
        PrepareBuilder();
        result.hasRegistIp = false;
        result.registIp_ = "";
        return this;
      }
      
      public bool HasLastLoginTimestamp {
        get { return result.hasLastLoginTimestamp; }
      }
      public long LastLoginTimestamp {
        get { return result.LastLoginTimestamp; }
        set { SetLastLoginTimestamp(value); }
      }
      public Builder SetLastLoginTimestamp(long value) {
        PrepareBuilder();
        result.hasLastLoginTimestamp = true;
        result.lastLoginTimestamp_ = value;
        return this;
      }
      public Builder ClearLastLoginTimestamp() {
        PrepareBuilder();
        result.hasLastLoginTimestamp = false;
        result.lastLoginTimestamp_ = 0L;
        return this;
      }
      
      public bool HasLastLoginIp {
        get { return result.hasLastLoginIp; }
      }
      public string LastLoginIp {
        get { return result.LastLoginIp; }
        set { SetLastLoginIp(value); }
      }
      public Builder SetLastLoginIp(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastLoginIp = true;
        result.lastLoginIp_ = value;
        return this;
      }
      public Builder ClearLastLoginIp() {
        PrepareBuilder();
        result.hasLastLoginIp = false;
        result.lastLoginIp_ = "";
        return this;
      }
      
      public bool HasForbidInfo {
       get { return result.hasForbidInfo; }
      }
      public global::org.zhangqi.proto.UserForbidInfo ForbidInfo {
        get { return result.ForbidInfo; }
        set { SetForbidInfo(value); }
      }
      public Builder SetForbidInfo(global::org.zhangqi.proto.UserForbidInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasForbidInfo = true;
        result.forbidInfo_ = value;
        return this;
      }
      public Builder SetForbidInfo(global::org.zhangqi.proto.UserForbidInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasForbidInfo = true;
        result.forbidInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeForbidInfo(global::org.zhangqi.proto.UserForbidInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasForbidInfo &&
            result.forbidInfo_ != global::org.zhangqi.proto.UserForbidInfo.DefaultInstance) {
            result.forbidInfo_ = global::org.zhangqi.proto.UserForbidInfo.CreateBuilder(result.forbidInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.forbidInfo_ = value;
        }
        result.hasForbidInfo = true;
        return this;
      }
      public Builder ClearForbidInfo() {
        PrepareBuilder();
        result.hasForbidInfo = false;
        result.forbidInfo_ = null;
        return this;
      }
    }
    static UserData() {
      object.ReferenceEquals(global::org.zhangqi.proto.Common.Descriptor, null);
    }
  }
  
  public sealed partial class UserForbidInfo : pb::GeneratedMessageLite<UserForbidInfo, UserForbidInfo.Builder> {
    private UserForbidInfo() { }
    private static readonly UserForbidInfo defaultInstance = new UserForbidInfo().MakeReadOnly();
    private static readonly string[] _userForbidInfoFieldNames = new string[] { "forbidEndTimestamp", "forbidReason", "forbidStartTimestamp" };
    private static readonly uint[] _userForbidInfoFieldTags = new uint[] { 24, 8, 16 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserForbidInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override UserForbidInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UserForbidInfo ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ForbidReasonFieldNumber = 1;
    private bool hasForbidReason;
    private global::org.zhangqi.proto.UserForbidReasonEnum forbidReason_ = global::org.zhangqi.proto.UserForbidReasonEnum.UserForbidReasonGmOperate;
    public bool HasForbidReason {
      get { return hasForbidReason; }
    }
    public global::org.zhangqi.proto.UserForbidReasonEnum ForbidReason {
      get { return forbidReason_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ForbidStartTimestampFieldNumber = 2;
    private bool hasForbidStartTimestamp;
    private long forbidStartTimestamp_;
    public bool HasForbidStartTimestamp {
      get { return hasForbidStartTimestamp; }
    }
    public long ForbidStartTimestamp {
      get { return forbidStartTimestamp_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ForbidEndTimestampFieldNumber = 3;
    private bool hasForbidEndTimestamp;
    private long forbidEndTimestamp_;
    public bool HasForbidEndTimestamp {
      get { return hasForbidEndTimestamp; }
    }
    public long ForbidEndTimestamp {
      get { return forbidEndTimestamp_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _userForbidInfoFieldNames;
      if (hasForbidReason) {
        output.WriteEnum(1, field_names[1], (int) ForbidReason, ForbidReason);
      }
      if (hasForbidStartTimestamp) {
        output.WriteInt64(2, field_names[2], ForbidStartTimestamp);
      }
      if (hasForbidEndTimestamp) {
        output.WriteInt64(3, field_names[0], ForbidEndTimestamp);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasForbidReason) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) ForbidReason);
        }
        if (hasForbidStartTimestamp) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, ForbidStartTimestamp);
        }
        if (hasForbidEndTimestamp) {
          size += pb::CodedOutputStream.ComputeInt64Size(3, ForbidEndTimestamp);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasForbidReason) hash ^= forbidReason_.GetHashCode();
      if (hasForbidStartTimestamp) hash ^= forbidStartTimestamp_.GetHashCode();
      if (hasForbidEndTimestamp) hash ^= forbidEndTimestamp_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      UserForbidInfo other = obj as UserForbidInfo;
      if (other == null) return false;
      if (hasForbidReason != other.hasForbidReason || (hasForbidReason && !forbidReason_.Equals(other.forbidReason_))) return false;
      if (hasForbidStartTimestamp != other.hasForbidStartTimestamp || (hasForbidStartTimestamp && !forbidStartTimestamp_.Equals(other.forbidStartTimestamp_))) return false;
      if (hasForbidEndTimestamp != other.hasForbidEndTimestamp || (hasForbidEndTimestamp && !forbidEndTimestamp_.Equals(other.forbidEndTimestamp_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserForbidInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserForbidInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserForbidInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserForbidInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserForbidInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserForbidInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserForbidInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserForbidInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserForbidInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static UserForbidInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UserForbidInfo MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(UserForbidInfo prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<UserForbidInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UserForbidInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UserForbidInfo result;
      
      private UserForbidInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          UserForbidInfo original = result;
          result = new UserForbidInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UserForbidInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override UserForbidInfo DefaultInstanceForType {
        get { return global::org.zhangqi.proto.UserForbidInfo.DefaultInstance; }
      }
      
      public override UserForbidInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is UserForbidInfo) {
          return MergeFrom((UserForbidInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UserForbidInfo other) {
        if (other == global::org.zhangqi.proto.UserForbidInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasForbidReason) {
          ForbidReason = other.ForbidReason;
        }
        if (other.HasForbidStartTimestamp) {
          ForbidStartTimestamp = other.ForbidStartTimestamp;
        }
        if (other.HasForbidEndTimestamp) {
          ForbidEndTimestamp = other.ForbidEndTimestamp;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_userForbidInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _userForbidInfoFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.forbidReason_ = (global::org.zhangqi.proto.UserForbidReasonEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.UserForbidReasonEnum), str);
                  } else {
                    result.forbidReason_ = (global::org.zhangqi.proto.UserForbidReasonEnum)number;
                  }
                  result.hasForbidReason = true;
                }
                catch {
                }
              }
              break;
            }
            case 16: {
              result.hasForbidStartTimestamp = input.ReadInt64(ref result.forbidStartTimestamp_);
              break;
            }
            case 24: {
              result.hasForbidEndTimestamp = input.ReadInt64(ref result.forbidEndTimestamp_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasForbidReason {
       get { return result.hasForbidReason; }
      }
      public global::org.zhangqi.proto.UserForbidReasonEnum ForbidReason {
        get { return result.ForbidReason; }
        set { SetForbidReason(value); }
      }
      public Builder SetForbidReason(global::org.zhangqi.proto.UserForbidReasonEnum value) {
        PrepareBuilder();
        result.hasForbidReason = true;
        result.forbidReason_ = value;
        return this;
      }
      public Builder ClearForbidReason() {
        PrepareBuilder();
        result.hasForbidReason = false;
        result.forbidReason_ = global::org.zhangqi.proto.UserForbidReasonEnum.UserForbidReasonGmOperate;
        return this;
      }
      
      public bool HasForbidStartTimestamp {
        get { return result.hasForbidStartTimestamp; }
      }
      public long ForbidStartTimestamp {
        get { return result.ForbidStartTimestamp; }
        set { SetForbidStartTimestamp(value); }
      }
      public Builder SetForbidStartTimestamp(long value) {
        PrepareBuilder();
        result.hasForbidStartTimestamp = true;
        result.forbidStartTimestamp_ = value;
        return this;
      }
      public Builder ClearForbidStartTimestamp() {
        PrepareBuilder();
        result.hasForbidStartTimestamp = false;
        result.forbidStartTimestamp_ = 0L;
        return this;
      }
      
      public bool HasForbidEndTimestamp {
        get { return result.hasForbidEndTimestamp; }
      }
      public long ForbidEndTimestamp {
        get { return result.ForbidEndTimestamp; }
        set { SetForbidEndTimestamp(value); }
      }
      public Builder SetForbidEndTimestamp(long value) {
        PrepareBuilder();
        result.hasForbidEndTimestamp = true;
        result.forbidEndTimestamp_ = value;
        return this;
      }
      public Builder ClearForbidEndTimestamp() {
        PrepareBuilder();
        result.hasForbidEndTimestamp = false;
        result.forbidEndTimestamp_ = 0L;
        return this;
      }
    }
    static UserForbidInfo() {
      object.ReferenceEquals(global::org.zhangqi.proto.Common.Descriptor, null);
    }
  }
  
  public sealed partial class RegistRequest : pb::GeneratedMessageLite<RegistRequest, RegistRequest.Builder> {
    private RegistRequest() { }
    private static readonly RegistRequest defaultInstance = new RegistRequest().MakeReadOnly();
    private static readonly string[] _registRequestFieldNames = new string[] { "channel", "lang", "password", "username" };
    private static readonly uint[] _registRequestFieldTags = new uint[] { 16, 24, 34, 10 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override RegistRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RegistRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UsernameFieldNumber = 1;
    private bool hasUsername;
    private string username_ = "";
    public bool HasUsername {
      get { return hasUsername; }
    }
    public string Username {
      get { return username_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ChannelFieldNumber = 2;
    private bool hasChannel;
    private global::org.zhangqi.proto.ChannelEnum channel_ = global::org.zhangqi.proto.ChannelEnum.ChannelNone;
    public bool HasChannel {
      get { return hasChannel; }
    }
    public global::org.zhangqi.proto.ChannelEnum Channel {
      get { return channel_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int LangFieldNumber = 3;
    private bool hasLang;
    private global::org.zhangqi.proto.LangEnum lang_ = global::org.zhangqi.proto.LangEnum.LangCn;
    public bool HasLang {
      get { return hasLang; }
    }
    public global::org.zhangqi.proto.LangEnum Lang {
      get { return lang_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int PasswordFieldNumber = 4;
    private bool hasPassword;
    private string password_ = "";
    public bool HasPassword {
      get { return hasPassword; }
    }
    public string Password {
      get { return password_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _registRequestFieldNames;
      if (hasUsername) {
        output.WriteString(1, field_names[3], Username);
      }
      if (hasChannel) {
        output.WriteEnum(2, field_names[0], (int) Channel, Channel);
      }
      if (hasLang) {
        output.WriteEnum(3, field_names[1], (int) Lang, Lang);
      }
      if (hasPassword) {
        output.WriteString(4, field_names[2], Password);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUsername) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Username);
        }
        if (hasChannel) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Channel);
        }
        if (hasLang) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Lang);
        }
        if (hasPassword) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Password);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasUsername) hash ^= username_.GetHashCode();
      if (hasChannel) hash ^= channel_.GetHashCode();
      if (hasLang) hash ^= lang_.GetHashCode();
      if (hasPassword) hash ^= password_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      RegistRequest other = obj as RegistRequest;
      if (other == null) return false;
      if (hasUsername != other.hasUsername || (hasUsername && !username_.Equals(other.username_))) return false;
      if (hasChannel != other.hasChannel || (hasChannel && !channel_.Equals(other.channel_))) return false;
      if (hasLang != other.hasLang || (hasLang && !lang_.Equals(other.lang_))) return false;
      if (hasPassword != other.hasPassword || (hasPassword && !password_.Equals(other.password_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RegistRequest MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(RegistRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<RegistRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RegistRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RegistRequest result;
      
      private RegistRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RegistRequest original = result;
          result = new RegistRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RegistRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override RegistRequest DefaultInstanceForType {
        get { return global::org.zhangqi.proto.RegistRequest.DefaultInstance; }
      }
      
      public override RegistRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is RegistRequest) {
          return MergeFrom((RegistRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RegistRequest other) {
        if (other == global::org.zhangqi.proto.RegistRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUsername) {
          Username = other.Username;
        }
        if (other.HasChannel) {
          Channel = other.Channel;
        }
        if (other.HasLang) {
          Lang = other.Lang;
        }
        if (other.HasPassword) {
          Password = other.Password;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_registRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _registRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUsername = input.ReadString(ref result.username_);
              break;
            }
            case 16: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.channel_ = (global::org.zhangqi.proto.ChannelEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.ChannelEnum), str);
                  } else {
                    result.channel_ = (global::org.zhangqi.proto.ChannelEnum)number;
                  }
                  result.hasChannel = true;
                }
                catch {
                }
              }
              break;
            }
            case 24: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.lang_ = (global::org.zhangqi.proto.LangEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.LangEnum), str);
                  } else {
                    result.lang_ = (global::org.zhangqi.proto.LangEnum)number;
                  }
                  result.hasLang = true;
                }
                catch {
                }
              }
              break;
            }
            case 34: {
              result.hasPassword = input.ReadString(ref result.password_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasUsername {
        get { return result.hasUsername; }
      }
      public string Username {
        get { return result.Username; }
        set { SetUsername(value); }
      }
      public Builder SetUsername(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder ClearUsername() {
        PrepareBuilder();
        result.hasUsername = false;
        result.username_ = "";
        return this;
      }
      
      public bool HasChannel {
       get { return result.hasChannel; }
      }
      public global::org.zhangqi.proto.ChannelEnum Channel {
        get { return result.Channel; }
        set { SetChannel(value); }
      }
      public Builder SetChannel(global::org.zhangqi.proto.ChannelEnum value) {
        PrepareBuilder();
        result.hasChannel = true;
        result.channel_ = value;
        return this;
      }
      public Builder ClearChannel() {
        PrepareBuilder();
        result.hasChannel = false;
        result.channel_ = global::org.zhangqi.proto.ChannelEnum.ChannelNone;
        return this;
      }
      
      public bool HasLang {
       get { return result.hasLang; }
      }
      public global::org.zhangqi.proto.LangEnum Lang {
        get { return result.Lang; }
        set { SetLang(value); }
      }
      public Builder SetLang(global::org.zhangqi.proto.LangEnum value) {
        PrepareBuilder();
        result.hasLang = true;
        result.lang_ = value;
        return this;
      }
      public Builder ClearLang() {
        PrepareBuilder();
        result.hasLang = false;
        result.lang_ = global::org.zhangqi.proto.LangEnum.LangCn;
        return this;
      }
      
      public bool HasPassword {
        get { return result.hasPassword; }
      }
      public string Password {
        get { return result.Password; }
        set { SetPassword(value); }
      }
      public Builder SetPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder ClearPassword() {
        PrepareBuilder();
        result.hasPassword = false;
        result.password_ = "";
        return this;
      }
    }
    static RegistRequest() {
      object.ReferenceEquals(global::org.zhangqi.proto.Common.Descriptor, null);
    }
  }
  
  public sealed partial class RegistResponse : pb::GeneratedMessageLite<RegistResponse, RegistResponse.Builder> {
    private RegistResponse() { }
    private static readonly RegistResponse defaultInstance = new RegistResponse().MakeReadOnly();
    private static readonly string[] _registResponseFieldNames = new string[] {  };
    private static readonly uint[] _registResponseFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override RegistResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RegistResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _registResponseFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      RegistResponse other = obj as RegistResponse;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static RegistResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RegistResponse MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(RegistResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<RegistResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RegistResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RegistResponse result;
      
      private RegistResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          RegistResponse original = result;
          result = new RegistResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RegistResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override RegistResponse DefaultInstanceForType {
        get { return global::org.zhangqi.proto.RegistResponse.DefaultInstance; }
      }
      
      public override RegistResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is RegistResponse) {
          return MergeFrom((RegistResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RegistResponse other) {
        if (other == global::org.zhangqi.proto.RegistResponse.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_registResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _registResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static RegistResponse() {
      object.ReferenceEquals(global::org.zhangqi.proto.Common.Descriptor, null);
    }
  }
  
  public sealed partial class LoginRequest : pb::GeneratedMessageLite<LoginRequest, LoginRequest.Builder> {
    private LoginRequest() { }
    private static readonly LoginRequest defaultInstance = new LoginRequest().MakeReadOnly();
    private static readonly string[] _loginRequestFieldNames = new string[] { "passwordMD5", "username" };
    private static readonly uint[] _loginRequestFieldTags = new uint[] { 18, 10 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override LoginRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UsernameFieldNumber = 1;
    private bool hasUsername;
    private string username_ = "";
    public bool HasUsername {
      get { return hasUsername; }
    }
    public string Username {
      get { return username_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int PasswordMD5FieldNumber = 2;
    private bool hasPasswordMD5;
    private string passwordMD5_ = "";
    public bool HasPasswordMD5 {
      get { return hasPasswordMD5; }
    }
    public string PasswordMD5 {
      get { return passwordMD5_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _loginRequestFieldNames;
      if (hasUsername) {
        output.WriteString(1, field_names[1], Username);
      }
      if (hasPasswordMD5) {
        output.WriteString(2, field_names[0], PasswordMD5);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUsername) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Username);
        }
        if (hasPasswordMD5) {
          size += pb::CodedOutputStream.ComputeStringSize(2, PasswordMD5);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasUsername) hash ^= username_.GetHashCode();
      if (hasPasswordMD5) hash ^= passwordMD5_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      LoginRequest other = obj as LoginRequest;
      if (other == null) return false;
      if (hasUsername != other.hasUsername || (hasUsername && !username_.Equals(other.username_))) return false;
      if (hasPasswordMD5 != other.hasPasswordMD5 || (hasPasswordMD5 && !passwordMD5_.Equals(other.passwordMD5_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginRequest MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(LoginRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<LoginRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginRequest result;
      
      private LoginRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginRequest original = result;
          result = new LoginRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override LoginRequest DefaultInstanceForType {
        get { return global::org.zhangqi.proto.LoginRequest.DefaultInstance; }
      }
      
      public override LoginRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is LoginRequest) {
          return MergeFrom((LoginRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginRequest other) {
        if (other == global::org.zhangqi.proto.LoginRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUsername) {
          Username = other.Username;
        }
        if (other.HasPasswordMD5) {
          PasswordMD5 = other.PasswordMD5;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUsername = input.ReadString(ref result.username_);
              break;
            }
            case 18: {
              result.hasPasswordMD5 = input.ReadString(ref result.passwordMD5_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasUsername {
        get { return result.hasUsername; }
      }
      public string Username {
        get { return result.Username; }
        set { SetUsername(value); }
      }
      public Builder SetUsername(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder ClearUsername() {
        PrepareBuilder();
        result.hasUsername = false;
        result.username_ = "";
        return this;
      }
      
      public bool HasPasswordMD5 {
        get { return result.hasPasswordMD5; }
      }
      public string PasswordMD5 {
        get { return result.PasswordMD5; }
        set { SetPasswordMD5(value); }
      }
      public Builder SetPasswordMD5(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPasswordMD5 = true;
        result.passwordMD5_ = value;
        return this;
      }
      public Builder ClearPasswordMD5() {
        PrepareBuilder();
        result.hasPasswordMD5 = false;
        result.passwordMD5_ = "";
        return this;
      }
    }
    static LoginRequest() {
      object.ReferenceEquals(global::org.zhangqi.proto.Common.Descriptor, null);
    }
  }
  
  public sealed partial class LoginResponse : pb::GeneratedMessageLite<LoginResponse, LoginResponse.Builder> {
    private LoginResponse() { }
    private static readonly LoginResponse defaultInstance = new LoginResponse().MakeReadOnly();
    private static readonly string[] _loginResponseFieldNames = new string[] { "timestamp", "userInfo" };
    private static readonly uint[] _loginResponseFieldTags = new uint[] { 16, 10 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override LoginResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserInfoFieldNumber = 1;
    private bool hasUserInfo;
    private global::org.zhangqi.proto.UserInfo userInfo_;
    public bool HasUserInfo {
      get { return hasUserInfo; }
    }
    public global::org.zhangqi.proto.UserInfo UserInfo {
      get { return userInfo_ ?? global::org.zhangqi.proto.UserInfo.DefaultInstance; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int TimestampFieldNumber = 2;
    private bool hasTimestamp;
    private long timestamp_;
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    public long Timestamp {
      get { return timestamp_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _loginResponseFieldNames;
      if (hasUserInfo) {
        output.WriteMessage(1, field_names[1], UserInfo);
      }
      if (hasTimestamp) {
        output.WriteInt64(2, field_names[0], Timestamp);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, UserInfo);
        }
        if (hasTimestamp) {
          size += pb::CodedOutputStream.ComputeInt64Size(2, Timestamp);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasUserInfo) hash ^= userInfo_.GetHashCode();
      if (hasTimestamp) hash ^= timestamp_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      LoginResponse other = obj as LoginResponse;
      if (other == null) return false;
      if (hasUserInfo != other.hasUserInfo || (hasUserInfo && !userInfo_.Equals(other.userInfo_))) return false;
      if (hasTimestamp != other.hasTimestamp || (hasTimestamp && !timestamp_.Equals(other.timestamp_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static LoginResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginResponse MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(LoginResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<LoginResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginResponse result;
      
      private LoginResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginResponse original = result;
          result = new LoginResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override LoginResponse DefaultInstanceForType {
        get { return global::org.zhangqi.proto.LoginResponse.DefaultInstance; }
      }
      
      public override LoginResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is LoginResponse) {
          return MergeFrom((LoginResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginResponse other) {
        if (other == global::org.zhangqi.proto.LoginResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserInfo) {
          MergeUserInfo(other.UserInfo);
        }
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::org.zhangqi.proto.UserInfo.Builder subBuilder = global::org.zhangqi.proto.UserInfo.CreateBuilder();
              if (result.hasUserInfo) {
                subBuilder.MergeFrom(UserInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              UserInfo = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasTimestamp = input.ReadInt64(ref result.timestamp_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasUserInfo {
       get { return result.hasUserInfo; }
      }
      public global::org.zhangqi.proto.UserInfo UserInfo {
        get { return result.UserInfo; }
        set { SetUserInfo(value); }
      }
      public Builder SetUserInfo(global::org.zhangqi.proto.UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = value;
        return this;
      }
      public Builder SetUserInfo(global::org.zhangqi.proto.UserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasUserInfo = true;
        result.userInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeUserInfo(global::org.zhangqi.proto.UserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasUserInfo &&
            result.userInfo_ != global::org.zhangqi.proto.UserInfo.DefaultInstance) {
            result.userInfo_ = global::org.zhangqi.proto.UserInfo.CreateBuilder(result.userInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.userInfo_ = value;
        }
        result.hasUserInfo = true;
        return this;
      }
      public Builder ClearUserInfo() {
        PrepareBuilder();
        result.hasUserInfo = false;
        result.userInfo_ = null;
        return this;
      }
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      public long Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      public Builder SetTimestamp(long value) {
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = 0L;
        return this;
      }
    }
    static LoginResponse() {
      object.ReferenceEquals(global::org.zhangqi.proto.Common.Descriptor, null);
    }
  }
  
  public sealed partial class MatchRequest : pb::GeneratedMessageLite<MatchRequest, MatchRequest.Builder> {
    private MatchRequest() { }
    private static readonly MatchRequest defaultInstance = new MatchRequest().MakeReadOnly();
    private static readonly string[] _matchRequestFieldNames = new string[] { "battleType" };
    private static readonly uint[] _matchRequestFieldTags = new uint[] { 8 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override MatchRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MatchRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int BattleTypeFieldNumber = 1;
    private bool hasBattleType;
    private global::org.zhangqi.proto.BattleTypeEnum battleType_ = global::org.zhangqi.proto.BattleTypeEnum.BattleTypeTwoPlayer;
    public bool HasBattleType {
      get { return hasBattleType; }
    }
    public global::org.zhangqi.proto.BattleTypeEnum BattleType {
      get { return battleType_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _matchRequestFieldNames;
      if (hasBattleType) {
        output.WriteEnum(1, field_names[0], (int) BattleType, BattleType);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBattleType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) BattleType);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasBattleType) hash ^= battleType_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      MatchRequest other = obj as MatchRequest;
      if (other == null) return false;
      if (hasBattleType != other.hasBattleType || (hasBattleType && !battleType_.Equals(other.battleType_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MatchRequest MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(MatchRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<MatchRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MatchRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MatchRequest result;
      
      private MatchRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          MatchRequest original = result;
          result = new MatchRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MatchRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override MatchRequest DefaultInstanceForType {
        get { return global::org.zhangqi.proto.MatchRequest.DefaultInstance; }
      }
      
      public override MatchRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is MatchRequest) {
          return MergeFrom((MatchRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MatchRequest other) {
        if (other == global::org.zhangqi.proto.MatchRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBattleType) {
          BattleType = other.BattleType;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_matchRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _matchRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.battleType_ = (global::org.zhangqi.proto.BattleTypeEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.BattleTypeEnum), str);
                  } else {
                    result.battleType_ = (global::org.zhangqi.proto.BattleTypeEnum)number;
                  }
                  result.hasBattleType = true;
                }
                catch {
                }
              }
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasBattleType {
       get { return result.hasBattleType; }
      }
      public global::org.zhangqi.proto.BattleTypeEnum BattleType {
        get { return result.BattleType; }
        set { SetBattleType(value); }
      }
      public Builder SetBattleType(global::org.zhangqi.proto.BattleTypeEnum value) {
        PrepareBuilder();
        result.hasBattleType = true;
        result.battleType_ = value;
        return this;
      }
      public Builder ClearBattleType() {
        PrepareBuilder();
        result.hasBattleType = false;
        result.battleType_ = global::org.zhangqi.proto.BattleTypeEnum.BattleTypeTwoPlayer;
        return this;
      }
    }
    static MatchRequest() {
      object.ReferenceEquals(global::org.zhangqi.proto.Common.Descriptor, null);
    }
  }
  
  public sealed partial class MatchResponse : pb::GeneratedMessageLite<MatchResponse, MatchResponse.Builder> {
    private MatchResponse() { }
    private static readonly MatchResponse defaultInstance = new MatchResponse().MakeReadOnly();
    private static readonly string[] _matchResponseFieldNames = new string[] {  };
    private static readonly uint[] _matchResponseFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override MatchResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MatchResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _matchResponseFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      MatchResponse other = obj as MatchResponse;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MatchResponse MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(MatchResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<MatchResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MatchResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MatchResponse result;
      
      private MatchResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          MatchResponse original = result;
          result = new MatchResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MatchResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override MatchResponse DefaultInstanceForType {
        get { return global::org.zhangqi.proto.MatchResponse.DefaultInstance; }
      }
      
      public override MatchResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is MatchResponse) {
          return MergeFrom((MatchResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MatchResponse other) {
        if (other == global::org.zhangqi.proto.MatchResponse.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_matchResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _matchResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static MatchResponse() {
      object.ReferenceEquals(global::org.zhangqi.proto.Common.Descriptor, null);
    }
  }
  
  public sealed partial class CancelMatchRequest : pb::GeneratedMessageLite<CancelMatchRequest, CancelMatchRequest.Builder> {
    private CancelMatchRequest() { }
    private static readonly CancelMatchRequest defaultInstance = new CancelMatchRequest().MakeReadOnly();
    private static readonly string[] _cancelMatchRequestFieldNames = new string[] {  };
    private static readonly uint[] _cancelMatchRequestFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override CancelMatchRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CancelMatchRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _cancelMatchRequestFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      CancelMatchRequest other = obj as CancelMatchRequest;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CancelMatchRequest MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(CancelMatchRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<CancelMatchRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CancelMatchRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CancelMatchRequest result;
      
      private CancelMatchRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CancelMatchRequest original = result;
          result = new CancelMatchRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CancelMatchRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override CancelMatchRequest DefaultInstanceForType {
        get { return global::org.zhangqi.proto.CancelMatchRequest.DefaultInstance; }
      }
      
      public override CancelMatchRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is CancelMatchRequest) {
          return MergeFrom((CancelMatchRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CancelMatchRequest other) {
        if (other == global::org.zhangqi.proto.CancelMatchRequest.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cancelMatchRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cancelMatchRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static CancelMatchRequest() {
      object.ReferenceEquals(global::org.zhangqi.proto.Common.Descriptor, null);
    }
  }
  
  public sealed partial class CancelMatchResponse : pb::GeneratedMessageLite<CancelMatchResponse, CancelMatchResponse.Builder> {
    private CancelMatchResponse() { }
    private static readonly CancelMatchResponse defaultInstance = new CancelMatchResponse().MakeReadOnly();
    private static readonly string[] _cancelMatchResponseFieldNames = new string[] {  };
    private static readonly uint[] _cancelMatchResponseFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override CancelMatchResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CancelMatchResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _cancelMatchResponseFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      CancelMatchResponse other = obj as CancelMatchResponse;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static CancelMatchResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CancelMatchResponse MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(CancelMatchResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<CancelMatchResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CancelMatchResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CancelMatchResponse result;
      
      private CancelMatchResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          CancelMatchResponse original = result;
          result = new CancelMatchResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CancelMatchResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override CancelMatchResponse DefaultInstanceForType {
        get { return global::org.zhangqi.proto.CancelMatchResponse.DefaultInstance; }
      }
      
      public override CancelMatchResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is CancelMatchResponse) {
          return MergeFrom((CancelMatchResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CancelMatchResponse other) {
        if (other == global::org.zhangqi.proto.CancelMatchResponse.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cancelMatchResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cancelMatchResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static CancelMatchResponse() {
      object.ReferenceEquals(global::org.zhangqi.proto.Common.Descriptor, null);
    }
  }
  
  public sealed partial class ForceOfflinePush : pb::GeneratedMessageLite<ForceOfflinePush, ForceOfflinePush.Builder> {
    private ForceOfflinePush() { }
    private static readonly ForceOfflinePush defaultInstance = new ForceOfflinePush().MakeReadOnly();
    private static readonly string[] _forceOfflinePushFieldNames = new string[] { "forceOfflineReason" };
    private static readonly uint[] _forceOfflinePushFieldTags = new uint[] { 8 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ForceOfflinePush DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override ForceOfflinePush DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ForceOfflinePush ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ForceOfflineReasonFieldNumber = 1;
    private bool hasForceOfflineReason;
    private global::org.zhangqi.proto.ForceOfflineReasonEnum forceOfflineReason_ = global::org.zhangqi.proto.ForceOfflineReasonEnum.ForceOfflineServerNotAvailable;
    public bool HasForceOfflineReason {
      get { return hasForceOfflineReason; }
    }
    public global::org.zhangqi.proto.ForceOfflineReasonEnum ForceOfflineReason {
      get { return forceOfflineReason_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _forceOfflinePushFieldNames;
      if (hasForceOfflineReason) {
        output.WriteEnum(1, field_names[0], (int) ForceOfflineReason, ForceOfflineReason);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasForceOfflineReason) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) ForceOfflineReason);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasForceOfflineReason) hash ^= forceOfflineReason_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      ForceOfflinePush other = obj as ForceOfflinePush;
      if (other == null) return false;
      if (hasForceOfflineReason != other.hasForceOfflineReason || (hasForceOfflineReason && !forceOfflineReason_.Equals(other.forceOfflineReason_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ForceOfflinePush ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ForceOfflinePush ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ForceOfflinePush ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ForceOfflinePush ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ForceOfflinePush ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ForceOfflinePush ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ForceOfflinePush ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ForceOfflinePush ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ForceOfflinePush ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ForceOfflinePush ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ForceOfflinePush MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(ForceOfflinePush prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<ForceOfflinePush, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ForceOfflinePush cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ForceOfflinePush result;
      
      private ForceOfflinePush PrepareBuilder() {
        if (resultIsReadOnly) {
          ForceOfflinePush original = result;
          result = new ForceOfflinePush();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ForceOfflinePush MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override ForceOfflinePush DefaultInstanceForType {
        get { return global::org.zhangqi.proto.ForceOfflinePush.DefaultInstance; }
      }
      
      public override ForceOfflinePush BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is ForceOfflinePush) {
          return MergeFrom((ForceOfflinePush) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ForceOfflinePush other) {
        if (other == global::org.zhangqi.proto.ForceOfflinePush.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasForceOfflineReason) {
          ForceOfflineReason = other.ForceOfflineReason;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_forceOfflinePushFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _forceOfflinePushFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.forceOfflineReason_ = (global::org.zhangqi.proto.ForceOfflineReasonEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.ForceOfflineReasonEnum), str);
                  } else {
                    result.forceOfflineReason_ = (global::org.zhangqi.proto.ForceOfflineReasonEnum)number;
                  }
                  result.hasForceOfflineReason = true;
                }
                catch {
                }
              }
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasForceOfflineReason {
       get { return result.hasForceOfflineReason; }
      }
      public global::org.zhangqi.proto.ForceOfflineReasonEnum ForceOfflineReason {
        get { return result.ForceOfflineReason; }
        set { SetForceOfflineReason(value); }
      }
      public Builder SetForceOfflineReason(global::org.zhangqi.proto.ForceOfflineReasonEnum value) {
        PrepareBuilder();
        result.hasForceOfflineReason = true;
        result.forceOfflineReason_ = value;
        return this;
      }
      public Builder ClearForceOfflineReason() {
        PrepareBuilder();
        result.hasForceOfflineReason = false;
        result.forceOfflineReason_ = global::org.zhangqi.proto.ForceOfflineReasonEnum.ForceOfflineServerNotAvailable;
        return this;
      }
    }
    static ForceOfflinePush() {
      object.ReferenceEquals(global::org.zhangqi.proto.Common.Descriptor, null);
    }
  }
  
  public sealed partial class MatchResultPush : pb::GeneratedMessageLite<MatchResultPush, MatchResultPush.Builder> {
    private MatchResultPush() { }
    private static readonly MatchResultPush defaultInstance = new MatchResultPush().MakeReadOnly();
    private static readonly string[] _matchResultPushFieldNames = new string[] { "battleId", "battleType", "isSuccess", "userBriefInfos" };
    private static readonly uint[] _matchResultPushFieldTags = new uint[] { 26, 16, 8, 34 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResultPush DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override MatchResultPush DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MatchResultPush ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int IsSuccessFieldNumber = 1;
    private bool hasIsSuccess;
    private bool isSuccess_;
    public bool HasIsSuccess {
      get { return hasIsSuccess; }
    }
    public bool IsSuccess {
      get { return isSuccess_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int BattleTypeFieldNumber = 2;
    private bool hasBattleType;
    private global::org.zhangqi.proto.BattleTypeEnum battleType_ = global::org.zhangqi.proto.BattleTypeEnum.BattleTypeTwoPlayer;
    public bool HasBattleType {
      get { return hasBattleType; }
    }
    public global::org.zhangqi.proto.BattleTypeEnum BattleType {
      get { return battleType_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int BattleIdFieldNumber = 3;
    private bool hasBattleId;
    private string battleId_ = "";
    public bool HasBattleId {
      get { return hasBattleId; }
    }
    public string BattleId {
      get { return battleId_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserBriefInfosFieldNumber = 4;
    private pbc::PopsicleList<global::org.zhangqi.proto.UserBriefInfo> userBriefInfos_ = new pbc::PopsicleList<global::org.zhangqi.proto.UserBriefInfo>();
    public scg::IList<global::org.zhangqi.proto.UserBriefInfo> UserBriefInfosList {
      get { return userBriefInfos_; }
    }
    public int UserBriefInfosCount {
      get { return userBriefInfos_.Count; }
    }
    public global::org.zhangqi.proto.UserBriefInfo GetUserBriefInfos(int index) {
      return userBriefInfos_[index];
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _matchResultPushFieldNames;
      if (hasIsSuccess) {
        output.WriteBool(1, field_names[2], IsSuccess);
      }
      if (hasBattleType) {
        output.WriteEnum(2, field_names[1], (int) BattleType, BattleType);
      }
      if (hasBattleId) {
        output.WriteString(3, field_names[0], BattleId);
      }
      if (userBriefInfos_.Count > 0) {
        output.WriteMessageArray(4, field_names[3], userBriefInfos_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasIsSuccess) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, IsSuccess);
        }
        if (hasBattleType) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) BattleType);
        }
        if (hasBattleId) {
          size += pb::CodedOutputStream.ComputeStringSize(3, BattleId);
        }
        foreach (global::org.zhangqi.proto.UserBriefInfo element in UserBriefInfosList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasIsSuccess) hash ^= isSuccess_.GetHashCode();
      if (hasBattleType) hash ^= battleType_.GetHashCode();
      if (hasBattleId) hash ^= battleId_.GetHashCode();
      foreach(global::org.zhangqi.proto.UserBriefInfo i in userBriefInfos_)
        hash ^= i.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      MatchResultPush other = obj as MatchResultPush;
      if (other == null) return false;
      if (hasIsSuccess != other.hasIsSuccess || (hasIsSuccess && !isSuccess_.Equals(other.isSuccess_))) return false;
      if (hasBattleType != other.hasBattleType || (hasBattleType && !battleType_.Equals(other.battleType_))) return false;
      if (hasBattleId != other.hasBattleId || (hasBattleId && !battleId_.Equals(other.battleId_))) return false;
      if(userBriefInfos_.Count != other.userBriefInfos_.Count) return false;
      for(int ix=0; ix < userBriefInfos_.Count; ix++)
        if(!userBriefInfos_[ix].Equals(other.userBriefInfos_[ix])) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResultPush ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResultPush ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResultPush ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResultPush ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResultPush ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResultPush ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResultPush ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResultPush ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResultPush ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static MatchResultPush ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MatchResultPush MakeReadOnly() {
      userBriefInfos_.MakeReadOnly();
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(MatchResultPush prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<MatchResultPush, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MatchResultPush cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MatchResultPush result;
      
      private MatchResultPush PrepareBuilder() {
        if (resultIsReadOnly) {
          MatchResultPush original = result;
          result = new MatchResultPush();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MatchResultPush MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override MatchResultPush DefaultInstanceForType {
        get { return global::org.zhangqi.proto.MatchResultPush.DefaultInstance; }
      }
      
      public override MatchResultPush BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is MatchResultPush) {
          return MergeFrom((MatchResultPush) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MatchResultPush other) {
        if (other == global::org.zhangqi.proto.MatchResultPush.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIsSuccess) {
          IsSuccess = other.IsSuccess;
        }
        if (other.HasBattleType) {
          BattleType = other.BattleType;
        }
        if (other.HasBattleId) {
          BattleId = other.BattleId;
        }
        if (other.userBriefInfos_.Count != 0) {
          result.userBriefInfos_.Add(other.userBriefInfos_);
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_matchResultPushFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _matchResultPushFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasIsSuccess = input.ReadBool(ref result.isSuccess_);
              break;
            }
            case 16: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.battleType_ = (global::org.zhangqi.proto.BattleTypeEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.BattleTypeEnum), str);
                  } else {
                    result.battleType_ = (global::org.zhangqi.proto.BattleTypeEnum)number;
                  }
                  result.hasBattleType = true;
                }
                catch {
                }
              }
              break;
            }
            case 26: {
              result.hasBattleId = input.ReadString(ref result.battleId_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.userBriefInfos_, global::org.zhangqi.proto.UserBriefInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasIsSuccess {
        get { return result.hasIsSuccess; }
      }
      public bool IsSuccess {
        get { return result.IsSuccess; }
        set { SetIsSuccess(value); }
      }
      public Builder SetIsSuccess(bool value) {
        PrepareBuilder();
        result.hasIsSuccess = true;
        result.isSuccess_ = value;
        return this;
      }
      public Builder ClearIsSuccess() {
        PrepareBuilder();
        result.hasIsSuccess = false;
        result.isSuccess_ = false;
        return this;
      }
      
      public bool HasBattleType {
       get { return result.hasBattleType; }
      }
      public global::org.zhangqi.proto.BattleTypeEnum BattleType {
        get { return result.BattleType; }
        set { SetBattleType(value); }
      }
      public Builder SetBattleType(global::org.zhangqi.proto.BattleTypeEnum value) {
        PrepareBuilder();
        result.hasBattleType = true;
        result.battleType_ = value;
        return this;
      }
      public Builder ClearBattleType() {
        PrepareBuilder();
        result.hasBattleType = false;
        result.battleType_ = global::org.zhangqi.proto.BattleTypeEnum.BattleTypeTwoPlayer;
        return this;
      }
      
      public bool HasBattleId {
        get { return result.hasBattleId; }
      }
      public string BattleId {
        get { return result.BattleId; }
        set { SetBattleId(value); }
      }
      public Builder SetBattleId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBattleId = true;
        result.battleId_ = value;
        return this;
      }
      public Builder ClearBattleId() {
        PrepareBuilder();
        result.hasBattleId = false;
        result.battleId_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::org.zhangqi.proto.UserBriefInfo> UserBriefInfosList {
        get { return PrepareBuilder().userBriefInfos_; }
      }
      public int UserBriefInfosCount {
        get { return result.UserBriefInfosCount; }
      }
      public global::org.zhangqi.proto.UserBriefInfo GetUserBriefInfos(int index) {
        return result.GetUserBriefInfos(index);
      }
      public Builder SetUserBriefInfos(int index, global::org.zhangqi.proto.UserBriefInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.userBriefInfos_[index] = value;
        return this;
      }
      public Builder SetUserBriefInfos(int index, global::org.zhangqi.proto.UserBriefInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.userBriefInfos_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUserBriefInfos(global::org.zhangqi.proto.UserBriefInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.userBriefInfos_.Add(value);
        return this;
      }
      public Builder AddUserBriefInfos(global::org.zhangqi.proto.UserBriefInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.userBriefInfos_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUserBriefInfos(scg::IEnumerable<global::org.zhangqi.proto.UserBriefInfo> values) {
        PrepareBuilder();
        result.userBriefInfos_.Add(values);
        return this;
      }
      public Builder ClearUserBriefInfos() {
        PrepareBuilder();
        result.userBriefInfos_.Clear();
        return this;
      }
    }
    static MatchResultPush() {
      object.ReferenceEquals(global::org.zhangqi.proto.Common.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
#pragma warning restore
