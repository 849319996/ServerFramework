// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=null.  DO NOT EDIT!
#pragma warning disable
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace org.zhangqi.proto {
  
  public static partial class Gm {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    #endregion
    #region Extensions
    internal static readonly object Descriptor;
    static Gm() {
      Descriptor = null;
    }
    #endregion
    
  }
  #region Enums
  public enum GmRpcNameEnum {
    GmRpcLogin = 100101,
    GmRpcGetAllServerState = 100201,
    GmRpcExecuteCmd = 100202,
    GmRpcGetOnlineUserInfo = 100203,
    GmRpcForceOfflinePush = 200001,
    GmRpcTextMsgPush = 200002,
  }
  
  public enum GmRpcErrorCodeEnum {
    GmRpcOk = 0,
    GmRpcServerError = 1,
    GmRpcClientError = 2,
    GmRpcErrorOperatedUserIdNotExist = 11,
    GmRpcErrorOperatedUserIsOnline = 12,
    GmRpcLoginErrorUsernameIsNotExist = 1001011,
    GmRpcLoginErrorPasswordWrong = 1001012,
  }
  
  public enum GmForceOfflineReasonEnum {
    GmForceOfflineServerNotAvailable = 1,
    GmForceOfflineSameUserLogin = 2,
  }
  
  #endregion
  
  #region Messages
  public sealed partial class GmUserData : pb::GeneratedMessageLite<GmUserData, GmUserData.Builder> {
    private GmUserData() { }
    private static readonly GmUserData defaultInstance = new GmUserData().MakeReadOnly();
    private static readonly string[] _gmUserDataFieldNames = new string[] { "lastLoginIp", "lastLoginTimestamp", "passwordMD5", "registTimestamp", "userId", "username" };
    private static readonly uint[] _gmUserDataFieldTags = new uint[] { 50, 40, 26, 32, 8, 18 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserData DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override GmUserData DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GmUserData ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private int userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public int UserId {
      get { return userId_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UsernameFieldNumber = 2;
    private bool hasUsername;
    private string username_ = "";
    public bool HasUsername {
      get { return hasUsername; }
    }
    public string Username {
      get { return username_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int PasswordMD5FieldNumber = 3;
    private bool hasPasswordMD5;
    private string passwordMD5_ = "";
    public bool HasPasswordMD5 {
      get { return hasPasswordMD5; }
    }
    public string PasswordMD5 {
      get { return passwordMD5_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int RegistTimestampFieldNumber = 4;
    private bool hasRegistTimestamp;
    private long registTimestamp_;
    public bool HasRegistTimestamp {
      get { return hasRegistTimestamp; }
    }
    public long RegistTimestamp {
      get { return registTimestamp_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int LastLoginTimestampFieldNumber = 5;
    private bool hasLastLoginTimestamp;
    private long lastLoginTimestamp_;
    public bool HasLastLoginTimestamp {
      get { return hasLastLoginTimestamp; }
    }
    public long LastLoginTimestamp {
      get { return lastLoginTimestamp_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int LastLoginIpFieldNumber = 6;
    private bool hasLastLoginIp;
    private string lastLoginIp_ = "";
    public bool HasLastLoginIp {
      get { return hasLastLoginIp; }
    }
    public string LastLoginIp {
      get { return lastLoginIp_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gmUserDataFieldNames;
      if (hasUserId) {
        output.WriteInt32(1, field_names[4], UserId);
      }
      if (hasUsername) {
        output.WriteString(2, field_names[5], Username);
      }
      if (hasPasswordMD5) {
        output.WriteString(3, field_names[2], PasswordMD5);
      }
      if (hasRegistTimestamp) {
        output.WriteInt64(4, field_names[3], RegistTimestamp);
      }
      if (hasLastLoginTimestamp) {
        output.WriteInt64(5, field_names[1], LastLoginTimestamp);
      }
      if (hasLastLoginIp) {
        output.WriteString(6, field_names[0], LastLoginIp);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, UserId);
        }
        if (hasUsername) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Username);
        }
        if (hasPasswordMD5) {
          size += pb::CodedOutputStream.ComputeStringSize(3, PasswordMD5);
        }
        if (hasRegistTimestamp) {
          size += pb::CodedOutputStream.ComputeInt64Size(4, RegistTimestamp);
        }
        if (hasLastLoginTimestamp) {
          size += pb::CodedOutputStream.ComputeInt64Size(5, LastLoginTimestamp);
        }
        if (hasLastLoginIp) {
          size += pb::CodedOutputStream.ComputeStringSize(6, LastLoginIp);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasUserId) hash ^= userId_.GetHashCode();
      if (hasUsername) hash ^= username_.GetHashCode();
      if (hasPasswordMD5) hash ^= passwordMD5_.GetHashCode();
      if (hasRegistTimestamp) hash ^= registTimestamp_.GetHashCode();
      if (hasLastLoginTimestamp) hash ^= lastLoginTimestamp_.GetHashCode();
      if (hasLastLoginIp) hash ^= lastLoginIp_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      GmUserData other = obj as GmUserData;
      if (other == null) return false;
      if (hasUserId != other.hasUserId || (hasUserId && !userId_.Equals(other.userId_))) return false;
      if (hasUsername != other.hasUsername || (hasUsername && !username_.Equals(other.username_))) return false;
      if (hasPasswordMD5 != other.hasPasswordMD5 || (hasPasswordMD5 && !passwordMD5_.Equals(other.passwordMD5_))) return false;
      if (hasRegistTimestamp != other.hasRegistTimestamp || (hasRegistTimestamp && !registTimestamp_.Equals(other.registTimestamp_))) return false;
      if (hasLastLoginTimestamp != other.hasLastLoginTimestamp || (hasLastLoginTimestamp && !lastLoginTimestamp_.Equals(other.lastLoginTimestamp_))) return false;
      if (hasLastLoginIp != other.hasLastLoginIp || (hasLastLoginIp && !lastLoginIp_.Equals(other.lastLoginIp_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserData ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GmUserData MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(GmUserData prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<GmUserData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GmUserData cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GmUserData result;
      
      private GmUserData PrepareBuilder() {
        if (resultIsReadOnly) {
          GmUserData original = result;
          result = new GmUserData();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GmUserData MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override GmUserData DefaultInstanceForType {
        get { return global::org.zhangqi.proto.GmUserData.DefaultInstance; }
      }
      
      public override GmUserData BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is GmUserData) {
          return MergeFrom((GmUserData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GmUserData other) {
        if (other == global::org.zhangqi.proto.GmUserData.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasUsername) {
          Username = other.Username;
        }
        if (other.HasPasswordMD5) {
          PasswordMD5 = other.PasswordMD5;
        }
        if (other.HasRegistTimestamp) {
          RegistTimestamp = other.RegistTimestamp;
        }
        if (other.HasLastLoginTimestamp) {
          LastLoginTimestamp = other.LastLoginTimestamp;
        }
        if (other.HasLastLoginIp) {
          LastLoginIp = other.LastLoginIp;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gmUserDataFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gmUserDataFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserId = input.ReadInt32(ref result.userId_);
              break;
            }
            case 18: {
              result.hasUsername = input.ReadString(ref result.username_);
              break;
            }
            case 26: {
              result.hasPasswordMD5 = input.ReadString(ref result.passwordMD5_);
              break;
            }
            case 32: {
              result.hasRegistTimestamp = input.ReadInt64(ref result.registTimestamp_);
              break;
            }
            case 40: {
              result.hasLastLoginTimestamp = input.ReadInt64(ref result.lastLoginTimestamp_);
              break;
            }
            case 50: {
              result.hasLastLoginIp = input.ReadString(ref result.lastLoginIp_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public int UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(int value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0;
        return this;
      }
      
      public bool HasUsername {
        get { return result.hasUsername; }
      }
      public string Username {
        get { return result.Username; }
        set { SetUsername(value); }
      }
      public Builder SetUsername(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder ClearUsername() {
        PrepareBuilder();
        result.hasUsername = false;
        result.username_ = "";
        return this;
      }
      
      public bool HasPasswordMD5 {
        get { return result.hasPasswordMD5; }
      }
      public string PasswordMD5 {
        get { return result.PasswordMD5; }
        set { SetPasswordMD5(value); }
      }
      public Builder SetPasswordMD5(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPasswordMD5 = true;
        result.passwordMD5_ = value;
        return this;
      }
      public Builder ClearPasswordMD5() {
        PrepareBuilder();
        result.hasPasswordMD5 = false;
        result.passwordMD5_ = "";
        return this;
      }
      
      public bool HasRegistTimestamp {
        get { return result.hasRegistTimestamp; }
      }
      public long RegistTimestamp {
        get { return result.RegistTimestamp; }
        set { SetRegistTimestamp(value); }
      }
      public Builder SetRegistTimestamp(long value) {
        PrepareBuilder();
        result.hasRegistTimestamp = true;
        result.registTimestamp_ = value;
        return this;
      }
      public Builder ClearRegistTimestamp() {
        PrepareBuilder();
        result.hasRegistTimestamp = false;
        result.registTimestamp_ = 0L;
        return this;
      }
      
      public bool HasLastLoginTimestamp {
        get { return result.hasLastLoginTimestamp; }
      }
      public long LastLoginTimestamp {
        get { return result.LastLoginTimestamp; }
        set { SetLastLoginTimestamp(value); }
      }
      public Builder SetLastLoginTimestamp(long value) {
        PrepareBuilder();
        result.hasLastLoginTimestamp = true;
        result.lastLoginTimestamp_ = value;
        return this;
      }
      public Builder ClearLastLoginTimestamp() {
        PrepareBuilder();
        result.hasLastLoginTimestamp = false;
        result.lastLoginTimestamp_ = 0L;
        return this;
      }
      
      public bool HasLastLoginIp {
        get { return result.hasLastLoginIp; }
      }
      public string LastLoginIp {
        get { return result.LastLoginIp; }
        set { SetLastLoginIp(value); }
      }
      public Builder SetLastLoginIp(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastLoginIp = true;
        result.lastLoginIp_ = value;
        return this;
      }
      public Builder ClearLastLoginIp() {
        PrepareBuilder();
        result.hasLastLoginIp = false;
        result.lastLoginIp_ = "";
        return this;
      }
    }
    static GmUserData() {
      object.ReferenceEquals(global::org.zhangqi.proto.Gm.Descriptor, null);
    }
  }
  
  public sealed partial class GmUserInfo : pb::GeneratedMessageLite<GmUserInfo, GmUserInfo.Builder> {
    private GmUserInfo() { }
    private static readonly GmUserInfo defaultInstance = new GmUserInfo().MakeReadOnly();
    private static readonly string[] _gmUserInfoFieldNames = new string[] { "userId", "username" };
    private static readonly uint[] _gmUserInfoFieldTags = new uint[] { 8, 18 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override GmUserInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GmUserInfo ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UserIdFieldNumber = 1;
    private bool hasUserId;
    private int userId_;
    public bool HasUserId {
      get { return hasUserId; }
    }
    public int UserId {
      get { return userId_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UsernameFieldNumber = 2;
    private bool hasUsername;
    private string username_ = "";
    public bool HasUsername {
      get { return hasUsername; }
    }
    public string Username {
      get { return username_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gmUserInfoFieldNames;
      if (hasUserId) {
        output.WriteInt32(1, field_names[0], UserId);
      }
      if (hasUsername) {
        output.WriteString(2, field_names[1], Username);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, UserId);
        }
        if (hasUsername) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Username);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasUserId) hash ^= userId_.GetHashCode();
      if (hasUsername) hash ^= username_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      GmUserInfo other = obj as GmUserInfo;
      if (other == null) return false;
      if (hasUserId != other.hasUserId || (hasUserId && !userId_.Equals(other.userId_))) return false;
      if (hasUsername != other.hasUsername || (hasUsername && !username_.Equals(other.username_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmUserInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GmUserInfo MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(GmUserInfo prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<GmUserInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GmUserInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GmUserInfo result;
      
      private GmUserInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          GmUserInfo original = result;
          result = new GmUserInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GmUserInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override GmUserInfo DefaultInstanceForType {
        get { return global::org.zhangqi.proto.GmUserInfo.DefaultInstance; }
      }
      
      public override GmUserInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is GmUserInfo) {
          return MergeFrom((GmUserInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GmUserInfo other) {
        if (other == global::org.zhangqi.proto.GmUserInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserId) {
          UserId = other.UserId;
        }
        if (other.HasUsername) {
          Username = other.Username;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gmUserInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gmUserInfoFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasUserId = input.ReadInt32(ref result.userId_);
              break;
            }
            case 18: {
              result.hasUsername = input.ReadString(ref result.username_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasUserId {
        get { return result.hasUserId; }
      }
      public int UserId {
        get { return result.UserId; }
        set { SetUserId(value); }
      }
      public Builder SetUserId(int value) {
        PrepareBuilder();
        result.hasUserId = true;
        result.userId_ = value;
        return this;
      }
      public Builder ClearUserId() {
        PrepareBuilder();
        result.hasUserId = false;
        result.userId_ = 0;
        return this;
      }
      
      public bool HasUsername {
        get { return result.hasUsername; }
      }
      public string Username {
        get { return result.Username; }
        set { SetUsername(value); }
      }
      public Builder SetUsername(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder ClearUsername() {
        PrepareBuilder();
        result.hasUsername = false;
        result.username_ = "";
        return this;
      }
    }
    static GmUserInfo() {
      object.ReferenceEquals(global::org.zhangqi.proto.Gm.Descriptor, null);
    }
  }
  
  public sealed partial class ServerLoadBalanceInfo : pb::GeneratedMessageLite<ServerLoadBalanceInfo, ServerLoadBalanceInfo.Builder> {
    private ServerLoadBalanceInfo() { }
    private static readonly ServerLoadBalanceInfo defaultInstance = new ServerLoadBalanceInfo().MakeReadOnly();
    private static readonly string[] _serverLoadBalanceInfoFieldNames = new string[] { "gatewayConnectPath", "id", "ip", "isMainLogicServer", "loadBalance" };
    private static readonly uint[] _serverLoadBalanceInfoFieldTags = new uint[] { 42, 8, 18, 32, 24 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerLoadBalanceInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override ServerLoadBalanceInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ServerLoadBalanceInfo ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int IdFieldNumber = 1;
    private bool hasId;
    private int id_;
    public bool HasId {
      get { return hasId; }
    }
    public int Id {
      get { return id_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int IpFieldNumber = 2;
    private bool hasIp;
    private string ip_ = "";
    public bool HasIp {
      get { return hasIp; }
    }
    public string Ip {
      get { return ip_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int LoadBalanceFieldNumber = 3;
    private bool hasLoadBalance;
    private int loadBalance_;
    public bool HasLoadBalance {
      get { return hasLoadBalance; }
    }
    public int LoadBalance {
      get { return loadBalance_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int IsMainLogicServerFieldNumber = 4;
    private bool hasIsMainLogicServer;
    private bool isMainLogicServer_;
    public bool HasIsMainLogicServer {
      get { return hasIsMainLogicServer; }
    }
    public bool IsMainLogicServer {
      get { return isMainLogicServer_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int GatewayConnectPathFieldNumber = 5;
    private bool hasGatewayConnectPath;
    private string gatewayConnectPath_ = "";
    public bool HasGatewayConnectPath {
      get { return hasGatewayConnectPath; }
    }
    public string GatewayConnectPath {
      get { return gatewayConnectPath_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _serverLoadBalanceInfoFieldNames;
      if (hasId) {
        output.WriteInt32(1, field_names[1], Id);
      }
      if (hasIp) {
        output.WriteString(2, field_names[2], Ip);
      }
      if (hasLoadBalance) {
        output.WriteInt32(3, field_names[4], LoadBalance);
      }
      if (hasIsMainLogicServer) {
        output.WriteBool(4, field_names[3], IsMainLogicServer);
      }
      if (hasGatewayConnectPath) {
        output.WriteString(5, field_names[0], GatewayConnectPath);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Id);
        }
        if (hasIp) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Ip);
        }
        if (hasLoadBalance) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, LoadBalance);
        }
        if (hasIsMainLogicServer) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, IsMainLogicServer);
        }
        if (hasGatewayConnectPath) {
          size += pb::CodedOutputStream.ComputeStringSize(5, GatewayConnectPath);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasId) hash ^= id_.GetHashCode();
      if (hasIp) hash ^= ip_.GetHashCode();
      if (hasLoadBalance) hash ^= loadBalance_.GetHashCode();
      if (hasIsMainLogicServer) hash ^= isMainLogicServer_.GetHashCode();
      if (hasGatewayConnectPath) hash ^= gatewayConnectPath_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      ServerLoadBalanceInfo other = obj as ServerLoadBalanceInfo;
      if (other == null) return false;
      if (hasId != other.hasId || (hasId && !id_.Equals(other.id_))) return false;
      if (hasIp != other.hasIp || (hasIp && !ip_.Equals(other.ip_))) return false;
      if (hasLoadBalance != other.hasLoadBalance || (hasLoadBalance && !loadBalance_.Equals(other.loadBalance_))) return false;
      if (hasIsMainLogicServer != other.hasIsMainLogicServer || (hasIsMainLogicServer && !isMainLogicServer_.Equals(other.isMainLogicServer_))) return false;
      if (hasGatewayConnectPath != other.hasGatewayConnectPath || (hasGatewayConnectPath && !gatewayConnectPath_.Equals(other.gatewayConnectPath_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerLoadBalanceInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerLoadBalanceInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerLoadBalanceInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerLoadBalanceInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerLoadBalanceInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerLoadBalanceInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerLoadBalanceInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerLoadBalanceInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerLoadBalanceInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static ServerLoadBalanceInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ServerLoadBalanceInfo MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(ServerLoadBalanceInfo prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<ServerLoadBalanceInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ServerLoadBalanceInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ServerLoadBalanceInfo result;
      
      private ServerLoadBalanceInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          ServerLoadBalanceInfo original = result;
          result = new ServerLoadBalanceInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ServerLoadBalanceInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override ServerLoadBalanceInfo DefaultInstanceForType {
        get { return global::org.zhangqi.proto.ServerLoadBalanceInfo.DefaultInstance; }
      }
      
      public override ServerLoadBalanceInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is ServerLoadBalanceInfo) {
          return MergeFrom((ServerLoadBalanceInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ServerLoadBalanceInfo other) {
        if (other == global::org.zhangqi.proto.ServerLoadBalanceInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasIp) {
          Ip = other.Ip;
        }
        if (other.HasLoadBalance) {
          LoadBalance = other.LoadBalance;
        }
        if (other.HasIsMainLogicServer) {
          IsMainLogicServer = other.IsMainLogicServer;
        }
        if (other.HasGatewayConnectPath) {
          GatewayConnectPath = other.GatewayConnectPath;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_serverLoadBalanceInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _serverLoadBalanceInfoFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt32(ref result.id_);
              break;
            }
            case 18: {
              result.hasIp = input.ReadString(ref result.ip_);
              break;
            }
            case 24: {
              result.hasLoadBalance = input.ReadInt32(ref result.loadBalance_);
              break;
            }
            case 32: {
              result.hasIsMainLogicServer = input.ReadBool(ref result.isMainLogicServer_);
              break;
            }
            case 42: {
              result.hasGatewayConnectPath = input.ReadString(ref result.gatewayConnectPath_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public int Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(int value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasIp {
        get { return result.hasIp; }
      }
      public string Ip {
        get { return result.Ip; }
        set { SetIp(value); }
      }
      public Builder SetIp(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIp = true;
        result.ip_ = value;
        return this;
      }
      public Builder ClearIp() {
        PrepareBuilder();
        result.hasIp = false;
        result.ip_ = "";
        return this;
      }
      
      public bool HasLoadBalance {
        get { return result.hasLoadBalance; }
      }
      public int LoadBalance {
        get { return result.LoadBalance; }
        set { SetLoadBalance(value); }
      }
      public Builder SetLoadBalance(int value) {
        PrepareBuilder();
        result.hasLoadBalance = true;
        result.loadBalance_ = value;
        return this;
      }
      public Builder ClearLoadBalance() {
        PrepareBuilder();
        result.hasLoadBalance = false;
        result.loadBalance_ = 0;
        return this;
      }
      
      public bool HasIsMainLogicServer {
        get { return result.hasIsMainLogicServer; }
      }
      public bool IsMainLogicServer {
        get { return result.IsMainLogicServer; }
        set { SetIsMainLogicServer(value); }
      }
      public Builder SetIsMainLogicServer(bool value) {
        PrepareBuilder();
        result.hasIsMainLogicServer = true;
        result.isMainLogicServer_ = value;
        return this;
      }
      public Builder ClearIsMainLogicServer() {
        PrepareBuilder();
        result.hasIsMainLogicServer = false;
        result.isMainLogicServer_ = false;
        return this;
      }
      
      public bool HasGatewayConnectPath {
        get { return result.hasGatewayConnectPath; }
      }
      public string GatewayConnectPath {
        get { return result.GatewayConnectPath; }
        set { SetGatewayConnectPath(value); }
      }
      public Builder SetGatewayConnectPath(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGatewayConnectPath = true;
        result.gatewayConnectPath_ = value;
        return this;
      }
      public Builder ClearGatewayConnectPath() {
        PrepareBuilder();
        result.hasGatewayConnectPath = false;
        result.gatewayConnectPath_ = "";
        return this;
      }
    }
    static ServerLoadBalanceInfo() {
      object.ReferenceEquals(global::org.zhangqi.proto.Gm.Descriptor, null);
    }
  }
  
  public sealed partial class GmLoginRequest : pb::GeneratedMessageLite<GmLoginRequest, GmLoginRequest.Builder> {
    private GmLoginRequest() { }
    private static readonly GmLoginRequest defaultInstance = new GmLoginRequest().MakeReadOnly();
    private static readonly string[] _gmLoginRequestFieldNames = new string[] { "passwordMD5", "username" };
    private static readonly uint[] _gmLoginRequestFieldTags = new uint[] { 18, 10 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override GmLoginRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GmLoginRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int UsernameFieldNumber = 1;
    private bool hasUsername;
    private string username_ = "";
    public bool HasUsername {
      get { return hasUsername; }
    }
    public string Username {
      get { return username_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int PasswordMD5FieldNumber = 2;
    private bool hasPasswordMD5;
    private string passwordMD5_ = "";
    public bool HasPasswordMD5 {
      get { return hasPasswordMD5; }
    }
    public string PasswordMD5 {
      get { return passwordMD5_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gmLoginRequestFieldNames;
      if (hasUsername) {
        output.WriteString(1, field_names[1], Username);
      }
      if (hasPasswordMD5) {
        output.WriteString(2, field_names[0], PasswordMD5);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUsername) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Username);
        }
        if (hasPasswordMD5) {
          size += pb::CodedOutputStream.ComputeStringSize(2, PasswordMD5);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasUsername) hash ^= username_.GetHashCode();
      if (hasPasswordMD5) hash ^= passwordMD5_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      GmLoginRequest other = obj as GmLoginRequest;
      if (other == null) return false;
      if (hasUsername != other.hasUsername || (hasUsername && !username_.Equals(other.username_))) return false;
      if (hasPasswordMD5 != other.hasPasswordMD5 || (hasPasswordMD5 && !passwordMD5_.Equals(other.passwordMD5_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GmLoginRequest MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(GmLoginRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<GmLoginRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GmLoginRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GmLoginRequest result;
      
      private GmLoginRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GmLoginRequest original = result;
          result = new GmLoginRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GmLoginRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override GmLoginRequest DefaultInstanceForType {
        get { return global::org.zhangqi.proto.GmLoginRequest.DefaultInstance; }
      }
      
      public override GmLoginRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is GmLoginRequest) {
          return MergeFrom((GmLoginRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GmLoginRequest other) {
        if (other == global::org.zhangqi.proto.GmLoginRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUsername) {
          Username = other.Username;
        }
        if (other.HasPasswordMD5) {
          PasswordMD5 = other.PasswordMD5;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gmLoginRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gmLoginRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUsername = input.ReadString(ref result.username_);
              break;
            }
            case 18: {
              result.hasPasswordMD5 = input.ReadString(ref result.passwordMD5_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasUsername {
        get { return result.hasUsername; }
      }
      public string Username {
        get { return result.Username; }
        set { SetUsername(value); }
      }
      public Builder SetUsername(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder ClearUsername() {
        PrepareBuilder();
        result.hasUsername = false;
        result.username_ = "";
        return this;
      }
      
      public bool HasPasswordMD5 {
        get { return result.hasPasswordMD5; }
      }
      public string PasswordMD5 {
        get { return result.PasswordMD5; }
        set { SetPasswordMD5(value); }
      }
      public Builder SetPasswordMD5(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPasswordMD5 = true;
        result.passwordMD5_ = value;
        return this;
      }
      public Builder ClearPasswordMD5() {
        PrepareBuilder();
        result.hasPasswordMD5 = false;
        result.passwordMD5_ = "";
        return this;
      }
    }
    static GmLoginRequest() {
      object.ReferenceEquals(global::org.zhangqi.proto.Gm.Descriptor, null);
    }
  }
  
  public sealed partial class GmLoginResponse : pb::GeneratedMessageLite<GmLoginResponse, GmLoginResponse.Builder> {
    private GmLoginResponse() { }
    private static readonly GmLoginResponse defaultInstance = new GmLoginResponse().MakeReadOnly();
    private static readonly string[] _gmLoginResponseFieldNames = new string[] { "gmUserInfo" };
    private static readonly uint[] _gmLoginResponseFieldTags = new uint[] { 10 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override GmLoginResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GmLoginResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int GmUserInfoFieldNumber = 1;
    private bool hasGmUserInfo;
    private global::org.zhangqi.proto.GmUserInfo gmUserInfo_;
    public bool HasGmUserInfo {
      get { return hasGmUserInfo; }
    }
    public global::org.zhangqi.proto.GmUserInfo GmUserInfo {
      get { return gmUserInfo_ ?? global::org.zhangqi.proto.GmUserInfo.DefaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gmLoginResponseFieldNames;
      if (hasGmUserInfo) {
        output.WriteMessage(1, field_names[0], GmUserInfo);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasGmUserInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, GmUserInfo);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasGmUserInfo) hash ^= gmUserInfo_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      GmLoginResponse other = obj as GmLoginResponse;
      if (other == null) return false;
      if (hasGmUserInfo != other.hasGmUserInfo || (hasGmUserInfo && !gmUserInfo_.Equals(other.gmUserInfo_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmLoginResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GmLoginResponse MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(GmLoginResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<GmLoginResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GmLoginResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GmLoginResponse result;
      
      private GmLoginResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GmLoginResponse original = result;
          result = new GmLoginResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GmLoginResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override GmLoginResponse DefaultInstanceForType {
        get { return global::org.zhangqi.proto.GmLoginResponse.DefaultInstance; }
      }
      
      public override GmLoginResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is GmLoginResponse) {
          return MergeFrom((GmLoginResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GmLoginResponse other) {
        if (other == global::org.zhangqi.proto.GmLoginResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasGmUserInfo) {
          MergeGmUserInfo(other.GmUserInfo);
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gmLoginResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gmLoginResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::org.zhangqi.proto.GmUserInfo.Builder subBuilder = global::org.zhangqi.proto.GmUserInfo.CreateBuilder();
              if (result.hasGmUserInfo) {
                subBuilder.MergeFrom(GmUserInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GmUserInfo = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasGmUserInfo {
       get { return result.hasGmUserInfo; }
      }
      public global::org.zhangqi.proto.GmUserInfo GmUserInfo {
        get { return result.GmUserInfo; }
        set { SetGmUserInfo(value); }
      }
      public Builder SetGmUserInfo(global::org.zhangqi.proto.GmUserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGmUserInfo = true;
        result.gmUserInfo_ = value;
        return this;
      }
      public Builder SetGmUserInfo(global::org.zhangqi.proto.GmUserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGmUserInfo = true;
        result.gmUserInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGmUserInfo(global::org.zhangqi.proto.GmUserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGmUserInfo &&
            result.gmUserInfo_ != global::org.zhangqi.proto.GmUserInfo.DefaultInstance) {
            result.gmUserInfo_ = global::org.zhangqi.proto.GmUserInfo.CreateBuilder(result.gmUserInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.gmUserInfo_ = value;
        }
        result.hasGmUserInfo = true;
        return this;
      }
      public Builder ClearGmUserInfo() {
        PrepareBuilder();
        result.hasGmUserInfo = false;
        result.gmUserInfo_ = null;
        return this;
      }
    }
    static GmLoginResponse() {
      object.ReferenceEquals(global::org.zhangqi.proto.Gm.Descriptor, null);
    }
  }
  
  public sealed partial class GmGetAllServerStateRequest : pb::GeneratedMessageLite<GmGetAllServerStateRequest, GmGetAllServerStateRequest.Builder> {
    private GmGetAllServerStateRequest() { }
    private static readonly GmGetAllServerStateRequest defaultInstance = new GmGetAllServerStateRequest().MakeReadOnly();
    private static readonly string[] _gmGetAllServerStateRequestFieldNames = new string[] {  };
    private static readonly uint[] _gmGetAllServerStateRequestFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override GmGetAllServerStateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GmGetAllServerStateRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gmGetAllServerStateRequestFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      GmGetAllServerStateRequest other = obj as GmGetAllServerStateRequest;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GmGetAllServerStateRequest MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(GmGetAllServerStateRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<GmGetAllServerStateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GmGetAllServerStateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GmGetAllServerStateRequest result;
      
      private GmGetAllServerStateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GmGetAllServerStateRequest original = result;
          result = new GmGetAllServerStateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GmGetAllServerStateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override GmGetAllServerStateRequest DefaultInstanceForType {
        get { return global::org.zhangqi.proto.GmGetAllServerStateRequest.DefaultInstance; }
      }
      
      public override GmGetAllServerStateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is GmGetAllServerStateRequest) {
          return MergeFrom((GmGetAllServerStateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GmGetAllServerStateRequest other) {
        if (other == global::org.zhangqi.proto.GmGetAllServerStateRequest.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gmGetAllServerStateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gmGetAllServerStateRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static GmGetAllServerStateRequest() {
      object.ReferenceEquals(global::org.zhangqi.proto.Gm.Descriptor, null);
    }
  }
  
  public sealed partial class GmGetAllServerStateResponse : pb::GeneratedMessageLite<GmGetAllServerStateResponse, GmGetAllServerStateResponse.Builder> {
    private GmGetAllServerStateResponse() { }
    private static readonly GmGetAllServerStateResponse defaultInstance = new GmGetAllServerStateResponse().MakeReadOnly();
    private static readonly string[] _gmGetAllServerStateResponseFieldNames = new string[] { "battleServerInfos", "gatewayInfos", "logicServerInfos" };
    private static readonly uint[] _gmGetAllServerStateResponseFieldTags = new uint[] { 18, 26, 10 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override GmGetAllServerStateResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GmGetAllServerStateResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int LogicServerInfosFieldNumber = 1;
    private pbc::PopsicleList<global::org.zhangqi.proto.ServerLoadBalanceInfo> logicServerInfos_ = new pbc::PopsicleList<global::org.zhangqi.proto.ServerLoadBalanceInfo>();
    public scg::IList<global::org.zhangqi.proto.ServerLoadBalanceInfo> LogicServerInfosList {
      get { return logicServerInfos_; }
    }
    public int LogicServerInfosCount {
      get { return logicServerInfos_.Count; }
    }
    public global::org.zhangqi.proto.ServerLoadBalanceInfo GetLogicServerInfos(int index) {
      return logicServerInfos_[index];
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int BattleServerInfosFieldNumber = 2;
    private pbc::PopsicleList<global::org.zhangqi.proto.ServerLoadBalanceInfo> battleServerInfos_ = new pbc::PopsicleList<global::org.zhangqi.proto.ServerLoadBalanceInfo>();
    public scg::IList<global::org.zhangqi.proto.ServerLoadBalanceInfo> BattleServerInfosList {
      get { return battleServerInfos_; }
    }
    public int BattleServerInfosCount {
      get { return battleServerInfos_.Count; }
    }
    public global::org.zhangqi.proto.ServerLoadBalanceInfo GetBattleServerInfos(int index) {
      return battleServerInfos_[index];
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int GatewayInfosFieldNumber = 3;
    private pbc::PopsicleList<global::org.zhangqi.proto.ServerLoadBalanceInfo> gatewayInfos_ = new pbc::PopsicleList<global::org.zhangqi.proto.ServerLoadBalanceInfo>();
    public scg::IList<global::org.zhangqi.proto.ServerLoadBalanceInfo> GatewayInfosList {
      get { return gatewayInfos_; }
    }
    public int GatewayInfosCount {
      get { return gatewayInfos_.Count; }
    }
    public global::org.zhangqi.proto.ServerLoadBalanceInfo GetGatewayInfos(int index) {
      return gatewayInfos_[index];
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gmGetAllServerStateResponseFieldNames;
      if (logicServerInfos_.Count > 0) {
        output.WriteMessageArray(1, field_names[2], logicServerInfos_);
      }
      if (battleServerInfos_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], battleServerInfos_);
      }
      if (gatewayInfos_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], gatewayInfos_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::org.zhangqi.proto.ServerLoadBalanceInfo element in LogicServerInfosList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        foreach (global::org.zhangqi.proto.ServerLoadBalanceInfo element in BattleServerInfosList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        foreach (global::org.zhangqi.proto.ServerLoadBalanceInfo element in GatewayInfosList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      foreach(global::org.zhangqi.proto.ServerLoadBalanceInfo i in logicServerInfos_)
        hash ^= i.GetHashCode();
      foreach(global::org.zhangqi.proto.ServerLoadBalanceInfo i in battleServerInfos_)
        hash ^= i.GetHashCode();
      foreach(global::org.zhangqi.proto.ServerLoadBalanceInfo i in gatewayInfos_)
        hash ^= i.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      GmGetAllServerStateResponse other = obj as GmGetAllServerStateResponse;
      if (other == null) return false;
      if(logicServerInfos_.Count != other.logicServerInfos_.Count) return false;
      for(int ix=0; ix < logicServerInfos_.Count; ix++)
        if(!logicServerInfos_[ix].Equals(other.logicServerInfos_[ix])) return false;
      if(battleServerInfos_.Count != other.battleServerInfos_.Count) return false;
      for(int ix=0; ix < battleServerInfos_.Count; ix++)
        if(!battleServerInfos_[ix].Equals(other.battleServerInfos_[ix])) return false;
      if(gatewayInfos_.Count != other.gatewayInfos_.Count) return false;
      for(int ix=0; ix < gatewayInfos_.Count; ix++)
        if(!gatewayInfos_[ix].Equals(other.gatewayInfos_[ix])) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetAllServerStateResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GmGetAllServerStateResponse MakeReadOnly() {
      logicServerInfos_.MakeReadOnly();
      battleServerInfos_.MakeReadOnly();
      gatewayInfos_.MakeReadOnly();
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(GmGetAllServerStateResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<GmGetAllServerStateResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GmGetAllServerStateResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GmGetAllServerStateResponse result;
      
      private GmGetAllServerStateResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GmGetAllServerStateResponse original = result;
          result = new GmGetAllServerStateResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GmGetAllServerStateResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override GmGetAllServerStateResponse DefaultInstanceForType {
        get { return global::org.zhangqi.proto.GmGetAllServerStateResponse.DefaultInstance; }
      }
      
      public override GmGetAllServerStateResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is GmGetAllServerStateResponse) {
          return MergeFrom((GmGetAllServerStateResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GmGetAllServerStateResponse other) {
        if (other == global::org.zhangqi.proto.GmGetAllServerStateResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.logicServerInfos_.Count != 0) {
          result.logicServerInfos_.Add(other.logicServerInfos_);
        }
        if (other.battleServerInfos_.Count != 0) {
          result.battleServerInfos_.Add(other.battleServerInfos_);
        }
        if (other.gatewayInfos_.Count != 0) {
          result.gatewayInfos_.Add(other.gatewayInfos_);
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gmGetAllServerStateResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gmGetAllServerStateResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.logicServerInfos_, global::org.zhangqi.proto.ServerLoadBalanceInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.battleServerInfos_, global::org.zhangqi.proto.ServerLoadBalanceInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.gatewayInfos_, global::org.zhangqi.proto.ServerLoadBalanceInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public pbc::IPopsicleList<global::org.zhangqi.proto.ServerLoadBalanceInfo> LogicServerInfosList {
        get { return PrepareBuilder().logicServerInfos_; }
      }
      public int LogicServerInfosCount {
        get { return result.LogicServerInfosCount; }
      }
      public global::org.zhangqi.proto.ServerLoadBalanceInfo GetLogicServerInfos(int index) {
        return result.GetLogicServerInfos(index);
      }
      public Builder SetLogicServerInfos(int index, global::org.zhangqi.proto.ServerLoadBalanceInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.logicServerInfos_[index] = value;
        return this;
      }
      public Builder SetLogicServerInfos(int index, global::org.zhangqi.proto.ServerLoadBalanceInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.logicServerInfos_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLogicServerInfos(global::org.zhangqi.proto.ServerLoadBalanceInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.logicServerInfos_.Add(value);
        return this;
      }
      public Builder AddLogicServerInfos(global::org.zhangqi.proto.ServerLoadBalanceInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.logicServerInfos_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLogicServerInfos(scg::IEnumerable<global::org.zhangqi.proto.ServerLoadBalanceInfo> values) {
        PrepareBuilder();
        result.logicServerInfos_.Add(values);
        return this;
      }
      public Builder ClearLogicServerInfos() {
        PrepareBuilder();
        result.logicServerInfos_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::org.zhangqi.proto.ServerLoadBalanceInfo> BattleServerInfosList {
        get { return PrepareBuilder().battleServerInfos_; }
      }
      public int BattleServerInfosCount {
        get { return result.BattleServerInfosCount; }
      }
      public global::org.zhangqi.proto.ServerLoadBalanceInfo GetBattleServerInfos(int index) {
        return result.GetBattleServerInfos(index);
      }
      public Builder SetBattleServerInfos(int index, global::org.zhangqi.proto.ServerLoadBalanceInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.battleServerInfos_[index] = value;
        return this;
      }
      public Builder SetBattleServerInfos(int index, global::org.zhangqi.proto.ServerLoadBalanceInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.battleServerInfos_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBattleServerInfos(global::org.zhangqi.proto.ServerLoadBalanceInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.battleServerInfos_.Add(value);
        return this;
      }
      public Builder AddBattleServerInfos(global::org.zhangqi.proto.ServerLoadBalanceInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.battleServerInfos_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBattleServerInfos(scg::IEnumerable<global::org.zhangqi.proto.ServerLoadBalanceInfo> values) {
        PrepareBuilder();
        result.battleServerInfos_.Add(values);
        return this;
      }
      public Builder ClearBattleServerInfos() {
        PrepareBuilder();
        result.battleServerInfos_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::org.zhangqi.proto.ServerLoadBalanceInfo> GatewayInfosList {
        get { return PrepareBuilder().gatewayInfos_; }
      }
      public int GatewayInfosCount {
        get { return result.GatewayInfosCount; }
      }
      public global::org.zhangqi.proto.ServerLoadBalanceInfo GetGatewayInfos(int index) {
        return result.GetGatewayInfos(index);
      }
      public Builder SetGatewayInfos(int index, global::org.zhangqi.proto.ServerLoadBalanceInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gatewayInfos_[index] = value;
        return this;
      }
      public Builder SetGatewayInfos(int index, global::org.zhangqi.proto.ServerLoadBalanceInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gatewayInfos_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGatewayInfos(global::org.zhangqi.proto.ServerLoadBalanceInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gatewayInfos_.Add(value);
        return this;
      }
      public Builder AddGatewayInfos(global::org.zhangqi.proto.ServerLoadBalanceInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gatewayInfos_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGatewayInfos(scg::IEnumerable<global::org.zhangqi.proto.ServerLoadBalanceInfo> values) {
        PrepareBuilder();
        result.gatewayInfos_.Add(values);
        return this;
      }
      public Builder ClearGatewayInfos() {
        PrepareBuilder();
        result.gatewayInfos_.Clear();
        return this;
      }
    }
    static GmGetAllServerStateResponse() {
      object.ReferenceEquals(global::org.zhangqi.proto.Gm.Descriptor, null);
    }
  }
  
  public sealed partial class GmExecuteCmdRequest : pb::GeneratedMessageLite<GmExecuteCmdRequest, GmExecuteCmdRequest.Builder> {
    private GmExecuteCmdRequest() { }
    private static readonly GmExecuteCmdRequest defaultInstance = new GmExecuteCmdRequest().MakeReadOnly();
    private static readonly string[] _gmExecuteCmdRequestFieldNames = new string[] { "cmdType", "params", "serverIds", "serverType" };
    private static readonly uint[] _gmExecuteCmdRequestFieldTags = new uint[] { 8, 34, 24, 16 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override GmExecuteCmdRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GmExecuteCmdRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int CmdTypeFieldNumber = 1;
    private bool hasCmdType;
    private global::org.zhangqi.proto.GmCmdTypeEnum cmdType_ = global::org.zhangqi.proto.GmCmdTypeEnum.GmCmdReloadTableConfig;
    public bool HasCmdType {
      get { return hasCmdType; }
    }
    public global::org.zhangqi.proto.GmCmdTypeEnum CmdType {
      get { return cmdType_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ServerTypeFieldNumber = 2;
    private bool hasServerType;
    private global::org.zhangqi.proto.RemoteServerTypeEnum serverType_ = global::org.zhangqi.proto.RemoteServerTypeEnum.ServerTypeLogic;
    public bool HasServerType {
      get { return hasServerType; }
    }
    public global::org.zhangqi.proto.RemoteServerTypeEnum ServerType {
      get { return serverType_; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ServerIdsFieldNumber = 3;
    private pbc::PopsicleList<int> serverIds_ = new pbc::PopsicleList<int>();
    public scg::IList<int> ServerIdsList {
      get { return pbc::Lists.AsReadOnly(serverIds_); }
    }
    public int ServerIdsCount {
      get { return serverIds_.Count; }
    }
    public int GetServerIds(int index) {
      return serverIds_[index];
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ParamsFieldNumber = 4;
    private pbc::PopsicleList<string> params_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ParamsList {
      get { return pbc::Lists.AsReadOnly(params_); }
    }
    public int ParamsCount {
      get { return params_.Count; }
    }
    public string GetParams(int index) {
      return params_[index];
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gmExecuteCmdRequestFieldNames;
      if (hasCmdType) {
        output.WriteEnum(1, field_names[0], (int) CmdType, CmdType);
      }
      if (hasServerType) {
        output.WriteEnum(2, field_names[3], (int) ServerType, ServerType);
      }
      if (serverIds_.Count > 0) {
        output.WriteInt32Array(3, field_names[2], serverIds_);
      }
      if (params_.Count > 0) {
        output.WriteStringArray(4, field_names[1], params_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCmdType) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) CmdType);
        }
        if (hasServerType) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) ServerType);
        }
        {
          int dataSize = 0;
          foreach (int element in ServerIdsList) {
            dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * serverIds_.Count;
        }
        {
          int dataSize = 0;
          foreach (string element in ParamsList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * params_.Count;
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasCmdType) hash ^= cmdType_.GetHashCode();
      if (hasServerType) hash ^= serverType_.GetHashCode();
      foreach(int i in serverIds_)
        hash ^= i.GetHashCode();
      foreach(string i in params_)
        hash ^= i.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      GmExecuteCmdRequest other = obj as GmExecuteCmdRequest;
      if (other == null) return false;
      if (hasCmdType != other.hasCmdType || (hasCmdType && !cmdType_.Equals(other.cmdType_))) return false;
      if (hasServerType != other.hasServerType || (hasServerType && !serverType_.Equals(other.serverType_))) return false;
      if(serverIds_.Count != other.serverIds_.Count) return false;
      for(int ix=0; ix < serverIds_.Count; ix++)
        if(!serverIds_[ix].Equals(other.serverIds_[ix])) return false;
      if(params_.Count != other.params_.Count) return false;
      for(int ix=0; ix < params_.Count; ix++)
        if(!params_[ix].Equals(other.params_[ix])) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GmExecuteCmdRequest MakeReadOnly() {
      serverIds_.MakeReadOnly();
      params_.MakeReadOnly();
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(GmExecuteCmdRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<GmExecuteCmdRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GmExecuteCmdRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GmExecuteCmdRequest result;
      
      private GmExecuteCmdRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GmExecuteCmdRequest original = result;
          result = new GmExecuteCmdRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GmExecuteCmdRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override GmExecuteCmdRequest DefaultInstanceForType {
        get { return global::org.zhangqi.proto.GmExecuteCmdRequest.DefaultInstance; }
      }
      
      public override GmExecuteCmdRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is GmExecuteCmdRequest) {
          return MergeFrom((GmExecuteCmdRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GmExecuteCmdRequest other) {
        if (other == global::org.zhangqi.proto.GmExecuteCmdRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCmdType) {
          CmdType = other.CmdType;
        }
        if (other.HasServerType) {
          ServerType = other.ServerType;
        }
        if (other.serverIds_.Count != 0) {
          result.serverIds_.Add(other.serverIds_);
        }
        if (other.params_.Count != 0) {
          result.params_.Add(other.params_);
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gmExecuteCmdRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gmExecuteCmdRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.cmdType_ = (global::org.zhangqi.proto.GmCmdTypeEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.GmCmdTypeEnum), str);
                  } else {
                    result.cmdType_ = (global::org.zhangqi.proto.GmCmdTypeEnum)number;
                  }
                  result.hasCmdType = true;
                }
                catch {
                }
              }
              break;
            }
            case 16: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.serverType_ = (global::org.zhangqi.proto.RemoteServerTypeEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.RemoteServerTypeEnum), str);
                  } else {
                    result.serverType_ = (global::org.zhangqi.proto.RemoteServerTypeEnum)number;
                  }
                  result.hasServerType = true;
                }
                catch {
                }
              }
              break;
            }
            case 26:
            case 24: {
              input.ReadInt32Array(tag, field_name, result.serverIds_);
              break;
            }
            case 34: {
              input.ReadStringArray(tag, field_name, result.params_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasCmdType {
       get { return result.hasCmdType; }
      }
      public global::org.zhangqi.proto.GmCmdTypeEnum CmdType {
        get { return result.CmdType; }
        set { SetCmdType(value); }
      }
      public Builder SetCmdType(global::org.zhangqi.proto.GmCmdTypeEnum value) {
        PrepareBuilder();
        result.hasCmdType = true;
        result.cmdType_ = value;
        return this;
      }
      public Builder ClearCmdType() {
        PrepareBuilder();
        result.hasCmdType = false;
        result.cmdType_ = global::org.zhangqi.proto.GmCmdTypeEnum.GmCmdReloadTableConfig;
        return this;
      }
      
      public bool HasServerType {
       get { return result.hasServerType; }
      }
      public global::org.zhangqi.proto.RemoteServerTypeEnum ServerType {
        get { return result.ServerType; }
        set { SetServerType(value); }
      }
      public Builder SetServerType(global::org.zhangqi.proto.RemoteServerTypeEnum value) {
        PrepareBuilder();
        result.hasServerType = true;
        result.serverType_ = value;
        return this;
      }
      public Builder ClearServerType() {
        PrepareBuilder();
        result.hasServerType = false;
        result.serverType_ = global::org.zhangqi.proto.RemoteServerTypeEnum.ServerTypeLogic;
        return this;
      }
      
      public pbc::IPopsicleList<int> ServerIdsList {
        get { return PrepareBuilder().serverIds_; }
      }
      public int ServerIdsCount {
        get { return result.ServerIdsCount; }
      }
      public int GetServerIds(int index) {
        return result.GetServerIds(index);
      }
      public Builder SetServerIds(int index, int value) {
        PrepareBuilder();
        result.serverIds_[index] = value;
        return this;
      }
      public Builder AddServerIds(int value) {
        PrepareBuilder();
        result.serverIds_.Add(value);
        return this;
      }
      public Builder AddRangeServerIds(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.serverIds_.Add(values);
        return this;
      }
      public Builder ClearServerIds() {
        PrepareBuilder();
        result.serverIds_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> ParamsList {
        get { return PrepareBuilder().params_; }
      }
      public int ParamsCount {
        get { return result.ParamsCount; }
      }
      public string GetParams(int index) {
        return result.GetParams(index);
      }
      public Builder SetParams(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.params_[index] = value;
        return this;
      }
      public Builder AddParams(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.params_.Add(value);
        return this;
      }
      public Builder AddRangeParams(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.params_.Add(values);
        return this;
      }
      public Builder ClearParams() {
        PrepareBuilder();
        result.params_.Clear();
        return this;
      }
    }
    static GmExecuteCmdRequest() {
      object.ReferenceEquals(global::org.zhangqi.proto.Gm.Descriptor, null);
    }
  }
  
  public sealed partial class GmExecuteCmdResponse : pb::GeneratedMessageLite<GmExecuteCmdResponse, GmExecuteCmdResponse.Builder> {
    private GmExecuteCmdResponse() { }
    private static readonly GmExecuteCmdResponse defaultInstance = new GmExecuteCmdResponse().MakeReadOnly();
    private static readonly string[] _gmExecuteCmdResponseFieldNames = new string[] {  };
    private static readonly uint[] _gmExecuteCmdResponseFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override GmExecuteCmdResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GmExecuteCmdResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gmExecuteCmdResponseFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      GmExecuteCmdResponse other = obj as GmExecuteCmdResponse;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmExecuteCmdResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GmExecuteCmdResponse MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(GmExecuteCmdResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<GmExecuteCmdResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GmExecuteCmdResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GmExecuteCmdResponse result;
      
      private GmExecuteCmdResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GmExecuteCmdResponse original = result;
          result = new GmExecuteCmdResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GmExecuteCmdResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override GmExecuteCmdResponse DefaultInstanceForType {
        get { return global::org.zhangqi.proto.GmExecuteCmdResponse.DefaultInstance; }
      }
      
      public override GmExecuteCmdResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is GmExecuteCmdResponse) {
          return MergeFrom((GmExecuteCmdResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GmExecuteCmdResponse other) {
        if (other == global::org.zhangqi.proto.GmExecuteCmdResponse.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gmExecuteCmdResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gmExecuteCmdResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static GmExecuteCmdResponse() {
      object.ReferenceEquals(global::org.zhangqi.proto.Gm.Descriptor, null);
    }
  }
  
  public sealed partial class GmGetOnlineUserInfoRequest : pb::GeneratedMessageLite<GmGetOnlineUserInfoRequest, GmGetOnlineUserInfoRequest.Builder> {
    private GmGetOnlineUserInfoRequest() { }
    private static readonly GmGetOnlineUserInfoRequest defaultInstance = new GmGetOnlineUserInfoRequest().MakeReadOnly();
    private static readonly string[] _gmGetOnlineUserInfoRequestFieldNames = new string[] {  };
    private static readonly uint[] _gmGetOnlineUserInfoRequestFieldTags = new uint[] {  };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override GmGetOnlineUserInfoRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GmGetOnlineUserInfoRequest ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gmGetOnlineUserInfoRequestFieldNames;
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      GmGetOnlineUserInfoRequest other = obj as GmGetOnlineUserInfoRequest;
      if (other == null) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GmGetOnlineUserInfoRequest MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(GmGetOnlineUserInfoRequest prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<GmGetOnlineUserInfoRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GmGetOnlineUserInfoRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GmGetOnlineUserInfoRequest result;
      
      private GmGetOnlineUserInfoRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GmGetOnlineUserInfoRequest original = result;
          result = new GmGetOnlineUserInfoRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GmGetOnlineUserInfoRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override GmGetOnlineUserInfoRequest DefaultInstanceForType {
        get { return global::org.zhangqi.proto.GmGetOnlineUserInfoRequest.DefaultInstance; }
      }
      
      public override GmGetOnlineUserInfoRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is GmGetOnlineUserInfoRequest) {
          return MergeFrom((GmGetOnlineUserInfoRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GmGetOnlineUserInfoRequest other) {
        if (other == global::org.zhangqi.proto.GmGetOnlineUserInfoRequest.DefaultInstance) return this;
        PrepareBuilder();
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gmGetOnlineUserInfoRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gmGetOnlineUserInfoRequestFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        return this;
      }
      
    }
    static GmGetOnlineUserInfoRequest() {
      object.ReferenceEquals(global::org.zhangqi.proto.Gm.Descriptor, null);
    }
  }
  
  public sealed partial class GmGetOnlineUserInfoResponse : pb::GeneratedMessageLite<GmGetOnlineUserInfoResponse, GmGetOnlineUserInfoResponse.Builder> {
    private GmGetOnlineUserInfoResponse() { }
    private static readonly GmGetOnlineUserInfoResponse defaultInstance = new GmGetOnlineUserInfoResponse().MakeReadOnly();
    private static readonly string[] _gmGetOnlineUserInfoResponseFieldNames = new string[] { "onlineUserInfos" };
    private static readonly uint[] _gmGetOnlineUserInfoResponseFieldTags = new uint[] { 10 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override GmGetOnlineUserInfoResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GmGetOnlineUserInfoResponse ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int OnlineUserInfosFieldNumber = 1;
    private pbc::PopsicleList<global::org.zhangqi.proto.OnlineUserInfo> onlineUserInfos_ = new pbc::PopsicleList<global::org.zhangqi.proto.OnlineUserInfo>();
    public scg::IList<global::org.zhangqi.proto.OnlineUserInfo> OnlineUserInfosList {
      get { return onlineUserInfos_; }
    }
    public int OnlineUserInfosCount {
      get { return onlineUserInfos_.Count; }
    }
    public global::org.zhangqi.proto.OnlineUserInfo GetOnlineUserInfos(int index) {
      return onlineUserInfos_[index];
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gmGetOnlineUserInfoResponseFieldNames;
      if (onlineUserInfos_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], onlineUserInfos_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::org.zhangqi.proto.OnlineUserInfo element in OnlineUserInfosList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      foreach(global::org.zhangqi.proto.OnlineUserInfo i in onlineUserInfos_)
        hash ^= i.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      GmGetOnlineUserInfoResponse other = obj as GmGetOnlineUserInfoResponse;
      if (other == null) return false;
      if(onlineUserInfos_.Count != other.onlineUserInfos_.Count) return false;
      for(int ix=0; ix < onlineUserInfos_.Count; ix++)
        if(!onlineUserInfos_[ix].Equals(other.onlineUserInfos_[ix])) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmGetOnlineUserInfoResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GmGetOnlineUserInfoResponse MakeReadOnly() {
      onlineUserInfos_.MakeReadOnly();
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(GmGetOnlineUserInfoResponse prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<GmGetOnlineUserInfoResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GmGetOnlineUserInfoResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GmGetOnlineUserInfoResponse result;
      
      private GmGetOnlineUserInfoResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GmGetOnlineUserInfoResponse original = result;
          result = new GmGetOnlineUserInfoResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GmGetOnlineUserInfoResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override GmGetOnlineUserInfoResponse DefaultInstanceForType {
        get { return global::org.zhangqi.proto.GmGetOnlineUserInfoResponse.DefaultInstance; }
      }
      
      public override GmGetOnlineUserInfoResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is GmGetOnlineUserInfoResponse) {
          return MergeFrom((GmGetOnlineUserInfoResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GmGetOnlineUserInfoResponse other) {
        if (other == global::org.zhangqi.proto.GmGetOnlineUserInfoResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.onlineUserInfos_.Count != 0) {
          result.onlineUserInfos_.Add(other.onlineUserInfos_);
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gmGetOnlineUserInfoResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gmGetOnlineUserInfoResponseFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.onlineUserInfos_, global::org.zhangqi.proto.OnlineUserInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public pbc::IPopsicleList<global::org.zhangqi.proto.OnlineUserInfo> OnlineUserInfosList {
        get { return PrepareBuilder().onlineUserInfos_; }
      }
      public int OnlineUserInfosCount {
        get { return result.OnlineUserInfosCount; }
      }
      public global::org.zhangqi.proto.OnlineUserInfo GetOnlineUserInfos(int index) {
        return result.GetOnlineUserInfos(index);
      }
      public Builder SetOnlineUserInfos(int index, global::org.zhangqi.proto.OnlineUserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.onlineUserInfos_[index] = value;
        return this;
      }
      public Builder SetOnlineUserInfos(int index, global::org.zhangqi.proto.OnlineUserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.onlineUserInfos_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOnlineUserInfos(global::org.zhangqi.proto.OnlineUserInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.onlineUserInfos_.Add(value);
        return this;
      }
      public Builder AddOnlineUserInfos(global::org.zhangqi.proto.OnlineUserInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.onlineUserInfos_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOnlineUserInfos(scg::IEnumerable<global::org.zhangqi.proto.OnlineUserInfo> values) {
        PrepareBuilder();
        result.onlineUserInfos_.Add(values);
        return this;
      }
      public Builder ClearOnlineUserInfos() {
        PrepareBuilder();
        result.onlineUserInfos_.Clear();
        return this;
      }
    }
    static GmGetOnlineUserInfoResponse() {
      object.ReferenceEquals(global::org.zhangqi.proto.Gm.Descriptor, null);
    }
  }
  
  public sealed partial class GmForceOfflinePush : pb::GeneratedMessageLite<GmForceOfflinePush, GmForceOfflinePush.Builder> {
    private GmForceOfflinePush() { }
    private static readonly GmForceOfflinePush defaultInstance = new GmForceOfflinePush().MakeReadOnly();
    private static readonly string[] _gmForceOfflinePushFieldNames = new string[] { "forceOfflineReason" };
    private static readonly uint[] _gmForceOfflinePushFieldTags = new uint[] { 8 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmForceOfflinePush DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override GmForceOfflinePush DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GmForceOfflinePush ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int ForceOfflineReasonFieldNumber = 1;
    private bool hasForceOfflineReason;
    private global::org.zhangqi.proto.GmForceOfflineReasonEnum forceOfflineReason_ = global::org.zhangqi.proto.GmForceOfflineReasonEnum.GmForceOfflineServerNotAvailable;
    public bool HasForceOfflineReason {
      get { return hasForceOfflineReason; }
    }
    public global::org.zhangqi.proto.GmForceOfflineReasonEnum ForceOfflineReason {
      get { return forceOfflineReason_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gmForceOfflinePushFieldNames;
      if (hasForceOfflineReason) {
        output.WriteEnum(1, field_names[0], (int) ForceOfflineReason, ForceOfflineReason);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasForceOfflineReason) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) ForceOfflineReason);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasForceOfflineReason) hash ^= forceOfflineReason_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      GmForceOfflinePush other = obj as GmForceOfflinePush;
      if (other == null) return false;
      if (hasForceOfflineReason != other.hasForceOfflineReason || (hasForceOfflineReason && !forceOfflineReason_.Equals(other.forceOfflineReason_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmForceOfflinePush ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmForceOfflinePush ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmForceOfflinePush ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmForceOfflinePush ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmForceOfflinePush ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmForceOfflinePush ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmForceOfflinePush ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmForceOfflinePush ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmForceOfflinePush ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmForceOfflinePush ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GmForceOfflinePush MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(GmForceOfflinePush prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<GmForceOfflinePush, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GmForceOfflinePush cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GmForceOfflinePush result;
      
      private GmForceOfflinePush PrepareBuilder() {
        if (resultIsReadOnly) {
          GmForceOfflinePush original = result;
          result = new GmForceOfflinePush();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GmForceOfflinePush MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override GmForceOfflinePush DefaultInstanceForType {
        get { return global::org.zhangqi.proto.GmForceOfflinePush.DefaultInstance; }
      }
      
      public override GmForceOfflinePush BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is GmForceOfflinePush) {
          return MergeFrom((GmForceOfflinePush) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GmForceOfflinePush other) {
        if (other == global::org.zhangqi.proto.GmForceOfflinePush.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasForceOfflineReason) {
          ForceOfflineReason = other.ForceOfflineReason;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gmForceOfflinePushFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gmForceOfflinePushFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              int number = 0;
              string str = null;
              if(input.ReadEnum(ref number, ref str)) {
                try {
                  if (str != null) {
                    result.forceOfflineReason_ = (global::org.zhangqi.proto.GmForceOfflineReasonEnum)System.Enum.Parse(typeof(global::org.zhangqi.proto.GmForceOfflineReasonEnum), str);
                  } else {
                    result.forceOfflineReason_ = (global::org.zhangqi.proto.GmForceOfflineReasonEnum)number;
                  }
                  result.hasForceOfflineReason = true;
                }
                catch {
                }
              }
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasForceOfflineReason {
       get { return result.hasForceOfflineReason; }
      }
      public global::org.zhangqi.proto.GmForceOfflineReasonEnum ForceOfflineReason {
        get { return result.ForceOfflineReason; }
        set { SetForceOfflineReason(value); }
      }
      public Builder SetForceOfflineReason(global::org.zhangqi.proto.GmForceOfflineReasonEnum value) {
        PrepareBuilder();
        result.hasForceOfflineReason = true;
        result.forceOfflineReason_ = value;
        return this;
      }
      public Builder ClearForceOfflineReason() {
        PrepareBuilder();
        result.hasForceOfflineReason = false;
        result.forceOfflineReason_ = global::org.zhangqi.proto.GmForceOfflineReasonEnum.GmForceOfflineServerNotAvailable;
        return this;
      }
    }
    static GmForceOfflinePush() {
      object.ReferenceEquals(global::org.zhangqi.proto.Gm.Descriptor, null);
    }
  }
  
  public sealed partial class GmTextMsgPush : pb::GeneratedMessageLite<GmTextMsgPush, GmTextMsgPush.Builder> {
    private GmTextMsgPush() { }
    private static readonly GmTextMsgPush defaultInstance = new GmTextMsgPush().MakeReadOnly();
    private static readonly string[] _gmTextMsgPushFieldNames = new string[] { "text" };
    private static readonly uint[] _gmTextMsgPushFieldTags = new uint[] { 10 };
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmTextMsgPush DefaultInstance {
      get { return defaultInstance; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override GmTextMsgPush DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GmTextMsgPush ThisMessage {
      get { return this; }
    }
    
    #if UNITY_EDITOR
    [pb.FieldNumber]
    #endif//
    public const int TextFieldNumber = 1;
    private bool hasText;
    private string text_ = "";
    public bool HasText {
      get { return hasText; }
    }
    public string Text {
      get { return text_; }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _gmTextMsgPushFieldNames;
      if (hasText) {
        output.WriteString(1, field_names[0], Text);
      }
    }
    
    private int memoizedSerializedSize = -1;
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasText) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Text);
        }
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    #region Lite runtime methods
    public override int GetHashCode() {
      int hash = GetType().GetHashCode();
      if (hasText) hash ^= text_.GetHashCode();
      return hash;
    }
    
    public override bool Equals(object obj) {
      GmTextMsgPush other = obj as GmTextMsgPush;
      if (other == null) return false;
      if (hasText != other.hasText || (hasText && !text_.Equals(other.text_))) return false;
      return true;
    }
    
    #endregion
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmTextMsgPush ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmTextMsgPush ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmTextMsgPush ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmTextMsgPush ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmTextMsgPush ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmTextMsgPush ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmTextMsgPush ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmTextMsgPush ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmTextMsgPush ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static GmTextMsgPush ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GmTextMsgPush MakeReadOnly() {
      return this;
    }
    
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder ToBuilder() { return CreateBuilder(this); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public override Builder CreateBuilderForType() { return new Builder(); }
    #if UNITY_EDITOR
     [pb.FieldNumber] 
     #endif//
    public static Builder CreateBuilder(GmTextMsgPush prototype) {
      return new Builder(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilderLite<GmTextMsgPush, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GmTextMsgPush cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GmTextMsgPush result;
      
      private GmTextMsgPush PrepareBuilder() {
        if (resultIsReadOnly) {
          GmTextMsgPush original = result;
          result = new GmTextMsgPush();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GmTextMsgPush MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override GmTextMsgPush DefaultInstanceForType {
        get { return global::org.zhangqi.proto.GmTextMsgPush.DefaultInstance; }
      }
      
      public override GmTextMsgPush BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessageLite other) {
        if (other is GmTextMsgPush) {
          return MergeFrom((GmTextMsgPush) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GmTextMsgPush other) {
        if (other == global::org.zhangqi.proto.GmTextMsgPush.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasText) {
          Text = other.Text;
        }
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_gmTextMsgPushFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _gmTextMsgPushFieldTags[field_ordinal];
            else {
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                return this;
              }
              ParseUnknownField(input, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasText = input.ReadString(ref result.text_);
              break;
            }
          }
        }
        
        return this;
      }
      
      
      public bool HasText {
        get { return result.hasText; }
      }
      public string Text {
        get { return result.Text; }
        set { SetText(value); }
      }
      public Builder SetText(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasText = true;
        result.text_ = value;
        return this;
      }
      public Builder ClearText() {
        PrepareBuilder();
        result.hasText = false;
        result.text_ = "";
        return this;
      }
    }
    static GmTextMsgPush() {
      object.ReferenceEquals(global::org.zhangqi.proto.Gm.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
#pragma warning restore
